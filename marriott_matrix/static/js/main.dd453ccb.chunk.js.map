{"version":3,"sources":["AvailableRooms.tsx","utils.tsx","CheckOutRow.tsx","PriceGrid.tsx","matrixReducer.ts","Slider.tsx","Filters.tsx","MarriottMatrix.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["AvailableRooms","props","hotels","useMemo","byName","Map","pricePoints","forEach","pricePoint","currentBest","get","hotelName","undefined","cheapestRate","pricePerNight","set","corporateRate","bookingLink","Array","from","values","sort","a","b","react_default","createElement","dialog","className","classNames","Classes","DARK","isOpen","visible","title","onClose","selectedSquare","dates","checkIn","checkOut","map","d","moment","format","renderTitle","htmlTable","striped","interactive","hotel","key","onClick","openBookingLink","price","concat","window","open","formatDate","date","dayOfWeek","DEFAULT_HOTELS","datesToKey","stay","getStayLength","diff","pricePointIsWithinStayLengthRange","stayLengthRange","length","hotelIsWithinDistance","distanceRange","distance","datesAreChronological","first","second","dateIsInRange","dateStr","range","stringToDate","getPriceFromGrid","grid","PricePointMap","_Map","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","prototype","call","list","Error","push","wrapNativeSuper","toDate","getBound","bound","defaultValue","setBound","bounds","round","roundToNearest","Math","getLabelStepSizeForLabelCount","labelCount","stepSize","DEFAULT_MIN_DISTANCE","DEFAULT_MIN_STAY_LENGTH","DEFAULT_MIN_PRICE","CheckOutRow","checkInDates","getPrice","onClickCell","onMouseEnter","onHover","onMouseLeave","offHover","clickable","active","activeCheckIn","tint","shouldTint","getColorClass","renderDate","multiline","_formatDate","Fragment","getPricePercentile","percentile","TINT_AFTER_CLICKED","PriceGrid","_useState","useState","_useState2","slicedToArray","setSelectedSquare","_useState3","_useState4","hoveredSquare","setHoveredSquare","useBlueprintTable","table","defaultColumnWidth","enableRowResizing","enableColumnResizing","enableMultipleSelection","loadingOptions","TableLoadingOption","CELLS","COLUMN_HEADERS","ROW_HEADERS","renderMode","RenderMode","BATCH","rowHeaderCellRenderer","rowIndex","rowHeaderCell","numRows","defaultRowHeight","column","checkOutDates","name","cellRenderer","renderColumns","bordered","condensed","CheckOutRow_CheckOutRow","onSelectSquare","getActiveCheckIn","shouldTintSquare","onHoverSquare","priceStr","toLocaleString","cell","stayOverlaps","selected","overlapper","overlapsSelected","thisSquare","rank","size","matrixReducer","state","action","type","objectSpread","byDates","pricePointsByDates","square","Slider","localValue","setLocalValue","labelPrefix","labelSuffix","spreadableProps","objectWithoutProperties","rangeSlider","assign","labelRenderer","label","labelStepSize","onChange","onRelease","Filters","ImmutableSet","bucketedHotels","ceiling","expandedBuckets","setExpandedBuckets","console","log","priceRange","Slider_Slider","min","max","selection","dateRangeInput","shortcuts","toDateString","parseDate","minDate","dateRange","maxDate","bucket","react","expanded","has","getKeyFromBucket","toggleBucketExpansion","icon","IconNames","CARET_DOWN","CARET_RIGHT","Infinity","floor","renderBucketTitle","items","some","TICK","intent","Intent","SUCCESS","collapse","outOfRange","tooltip","content","disabled","controls","checked","onChangeHotelSelection","labelElement","remove","add","sortDates","MarriottMatrix","viewingAvailableRooms","setViewingAvailableRooms","_useReducer","useReducer","hotelToPricePoints","selectedHotelNames","Set","addPricePoint","includes","byHotel","ImmutableList","createInitialState","_useReducer2","dispatch","_useMemo","buckets","nameToHotel","anyHotelsSelected","array","_useMemo2","useCallback","_useMemo3","stayDates","maxPrice","maxStayLength","_pricePoint$stayDates","stayLength","_useMemo4","maxDistance","last","setDistanceRange","_useState5","_useState6","setDateRange","_useState7","_useState8","setStayLengthRange","_useState9","_useState10","setPriceRange","useEffect","datesToPricePoints","priceGridMap","maybeAddPricePointToGrid","soldOut","_pricePoint$stayDates2","_i","_arr","pricePointWithPrice","datesString","bestPriceForStay","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","_ref2","hotelForPricePoint","err","return","sortedPrices","toConsumableArray","_ref4","_ref5","_ref6","_ref7","mapWithRanks","_ref8","i","_ref9","dateString","Filters_Filters","renderFilters","PriceGrid_PriceGrid","renderTable","AvailableRooms_AvailableRooms","getPricePointsForStay","processScrapedPricePoint","_pricePoint$dates","booking_link","propertyCodeMatch","match","corporate_rate","price_per_night","sold_out","App","innerWidth","width","setWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","MarriottMatrix_MarriottMatrix","prices","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd453ccb.chunk.js","sourcesContent":["import React, { useMemo } from \"react\";\nimport { PricePointWithPrice, StayDates } from \"./types\";\nimport \"./AvailableRooms.scss\";\nimport { HTMLTable, Dialog, Classes } from \"@blueprintjs/core\";\nimport moment from \"moment\";\nimport classNames from \"classnames\";\n\ninterface Props {\n  visible: boolean;\n  pricePoints?: PricePointWithPrice[];\n  selectedSquare?: StayDates;\n  onClose: () => void;\n}\n\ninterface HotelPrice {\n  hotelName: string;\n  cheapestRate?: number;\n  corporateRate: boolean;\n  bookingLink?: string;\n}\n\nfunction getRate(price: HotelPrice) {\n  if (price.cheapestRate === null) {\n    return \"No Rate Available\";\n  }\n  return `$${price.cheapestRate} (${\n    price.corporateRate ? \"Corporate Rate\" : \"Regular Rate\"\n  })`;\n}\n\nexport const AvailableRooms: React.FC<Props> = (props: Props) => {\n  const hotels = useMemo(() => {\n    const byName = new Map<string, HotelPrice>();\n    if (props.pricePoints) {\n      props.pricePoints.forEach(pricePoint => {\n        const currentBest = byName.get(pricePoint.hotelName);\n        if (\n          currentBest === undefined ||\n          currentBest.cheapestRate === undefined ||\n          (pricePoint.pricePerNight !== undefined &&\n            pricePoint.pricePerNight < currentBest.cheapestRate)\n        ) {\n          byName.set(pricePoint.hotelName, {\n            hotelName: pricePoint.hotelName,\n            cheapestRate: pricePoint.pricePerNight,\n            corporateRate: pricePoint.corporateRate,\n            bookingLink: pricePoint.bookingLink\n          });\n        }\n      });\n    }\n    return Array.from(byName.values()).sort((a, b) => {\n      if (a.cheapestRate === null || a.cheapestRate === undefined) {\n        return 1;\n      } else if (b.cheapestRate === null || b.cheapestRate === undefined) {\n        return -1;\n      }\n      return a.cheapestRate - b.cheapestRate;\n    });\n  }, [props]);\n\n  return (\n    <Dialog\n      className={classNames(\"available-rooms\", Classes.DARK)}\n      isOpen={props.visible}\n      title={\"Available Rooms\"}\n      onClose={props.onClose}\n    >\n      {renderTitle()}\n      <p>Click on an option to book</p>\n      <div className=\"table-container\">\n        <HTMLTable className=\"table\" striped interactive>\n          <tbody>\n            {hotels.map(hotel => (\n              <tr key={hotel.hotelName} onClick={openBookingLink(hotel)}>\n                <td>{hotel.hotelName}</td>\n                <td>{getRate(hotel)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </HTMLTable>\n      </div>\n    </Dialog>\n  );\n\n  function renderTitle() {\n    if (!props.selectedSquare) {\n      return null;\n    }\n    const dates = [\n      props.selectedSquare.checkIn,\n      props.selectedSquare.checkOut\n    ].map(d => moment(d).format(\"dddd, MMMM D, YYYY\"));\n\n    return (\n      <h3>\n        {dates[0]}\n        <span className=\"space\" />\n        —\n        <span className=\"space\" />\n        {dates[1]}\n      </h3>\n    );\n  }\n\n  function openBookingLink(hotel: HotelPrice) {\n    return () => {\n      if (hotel.bookingLink) {\n        window.open(hotel.bookingLink, \"_blank\");\n      }\n    };\n  }\n};\n","import moment from \"moment\";\nimport {\n  PricePoint,\n  Hotel,\n  PriceGridData,\n  StayDates,\n  BoundedRange\n} from \"./types\";\nimport { NumberRange } from \"@blueprintjs/core\";\nimport { DateRange } from \"@blueprintjs/datetime\";\n\nexport function formatDate(date: string) {\n  return {\n    dayOfWeek: moment(date).format(\"ddd\"),\n    date: moment(date).format(\"M/D\")\n  };\n}\n\nexport const DEFAULT_HOTELS: string[] = [\n  \"The Ritz-Carlton Georgetown, Washington, D.C.\",\n  \"The Westin Georgetown, Washington D.C.\",\n  \"Washington Marriott Georgetown\",\n  \"The Ritz-Carlton, Washington, DC\",\n  \"The Mayflower Hotel, Autograph Collection\",\n  \"The Westin Georgetown, Washington D.C.\"\n];\n\nexport function datesToKey(stay: StayDates): string {\n  return `${stay.checkIn}-${stay.checkOut}`;\n}\n\nexport function getLast<T>(array: T[]): T {\n  return array[array.length - 1];\n}\n\nexport function getStayLength(stay: StayDates) {\n  return moment(stay.checkOut).diff(moment(stay.checkIn), \"days\");\n}\n\nexport function pricePointIsWithinStayLengthRange(\n  stay: StayDates,\n  stayLengthRange: NumberRange\n) {\n  const length = getStayLength(stay);\n  return length >= stayLengthRange[0] && length <= stayLengthRange[1];\n}\n\nexport function hotelIsWithinDistance(\n  hotel: Hotel,\n  distanceRange: NumberRange\n) {\n  return (\n    hotel.distance >= distanceRange[0] && hotel.distance <= distanceRange[1]\n  );\n}\n\nexport function pricePointIsWithinPriceRange(\n  price: number,\n  range: NumberRange\n) {\n  return price >= range[0] && price <= range[1];\n}\n\nexport function datesAreChronological(first?: Date, second?: Date): boolean {\n  if (!first || !second) {\n    return true;\n  }\n  return moment(second).diff(moment(first)) >= 0;\n}\n\nexport function dateIsInRange(dateStr: string, range: DateRange) {\n  const date = stringToDate(dateStr);\n  return (\n    datesAreChronological(range[0], date) &&\n    datesAreChronological(date, range[1])\n  );\n}\n\nexport function getPriceFromGrid(\n  grid: PriceGridData | undefined,\n  stay: StayDates\n) {\n  if (grid) {\n    const key = datesToKey(stay);\n    const pricePoint = grid.map.get(key);\n    return pricePoint && pricePoint.pricePerNight;\n  }\n}\n\nexport class PricePointMap<V extends PricePoint> extends Map<string, V[]> {\n  public addPricePoint(key: string, pricePoint: V) {\n    if (this.get(key) === undefined) {\n      super.set(key, []);\n    }\n    const list = super.get(key);\n    if (list === undefined) {\n      throw Error(`No list for key: ${key} in PricePointMap`);\n    }\n    list.push(pricePoint);\n    return this;\n  }\n\n  public set(): this {\n    throw Error(\n      \"Calling set() in a PricePointMap is disallowed. Use addPricePoint instead.\"\n    );\n  }\n}\n\nexport function stringToDate(date: string) {\n  return moment(date).toDate();\n}\n\nexport function getBucketCeiling(value: number) {\n  if (value <= 1) {\n    return 1;\n  } else if (value <= 2) {\n    return 2;\n  } else if (value <= 5) {\n    return 5;\n  } else if (value <= 10) {\n    return 10;\n  } else {\n    return Infinity;\n  }\n}\n\nexport function getBound<T>(\n  range: BoundedRange<[T, T]>,\n  bound: \"max\" | \"min\",\n  defaultValue?: T\n) {\n  const setBound = range.bounds[bound === \"min\" ? 0 : 1];\n  return setBound !== undefined ? setBound : defaultValue;\n}\n\nexport function round(value: number, roundToNearest: number) {\n  return Math.round(value / roundToNearest) * roundToNearest;\n}\n\nexport function getLabelStepSizeForLabelCount(\n  range: NumberRange,\n  labelCount: number\n) {\n  const stepSize = (range[1] - range[0]) / labelCount;\n  if (stepSize < 10) {\n    return round(stepSize, 1);\n  } else if (stepSize < 100) {\n    return round(stepSize, 10);\n  } else if (stepSize < 1000) {\n    return round(stepSize, 100);\n  } else {\n    return round(stepSize, 1000);\n  }\n}\n\nexport const DEFAULT_MIN_DISTANCE = 0;\nexport const DEFAULT_MIN_STAY_LENGTH = 1;\nexport const DEFAULT_MIN_PRICE = 0;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./CheckOutRow.scss\";\nimport { formatDate } from \"./utils\";\n\ninterface Props {\n  checkInDates: string[];\n  checkOut?: string;\n  activeCheckIn?: string;\n  getPrice?: (checkOut: string) => number | undefined;\n  shouldTint?: (checkIn: string) => boolean;\n  onClick?: (checkIn: string) => void;\n  getPricePercentile?: (checkIn: string) => number | undefined;\n  onHover?: (checkIn: string) => void;\n  offHover?: (checkIn: string) => void;\n}\n\nexport const CheckOutRow: React.FC<Props> = (props: Props) => {\n  return (\n    <tr>\n      {props.checkInDates.map(checkIn => {\n        if (props.getPrice && props.checkOut) {\n          const price = props.getPrice && props.getPrice(checkIn);\n          return (\n            <td\n              key={checkIn}\n              onClick={onClickCell(checkIn)}\n              onMouseEnter={() => props.onHover && props.onHover(checkIn)}\n              onMouseLeave={() => props.offHover && props.offHover(checkIn)}\n              className={classNames(\n                {\n                  clickable: price !== undefined,\n                  active: props.activeCheckIn === checkIn,\n                  tint: props.shouldTint && props.shouldTint(checkIn)\n                },\n                checkIn < props.checkOut ? getColorClass(checkIn) : \"impossible\"\n              )}\n            >\n              {price !== undefined && <p>{`$${price}`}</p>}\n            </td>\n          );\n        } else {\n          return (\n            <th\n              key={checkIn}\n              className={classNames(\n                \"checkin-date\",\n                props.shouldTint && props.shouldTint(checkIn) && \"tint\"\n              )}\n            >\n              {renderDate(checkIn, true)}\n            </th>\n          );\n        }\n      })}\n      {props.checkOut && (\n        <th className=\"checkout-date\">{renderDate(props.checkOut, false)}</th>\n      )}\n    </tr>\n  );\n\n  function renderDate(dateStr: string, multiline: boolean) {\n    const { dayOfWeek, date } = formatDate(dateStr);\n    if (multiline) {\n      return (\n        <>\n          <p>{dayOfWeek}</p>\n          <p>{date}</p>\n        </>\n      );\n    } else {\n      return (\n        <p>\n          {dayOfWeek}, {date}\n        </p>\n      );\n    }\n  }\n\n  function onClickCell(checkIn: string) {\n    return () => props.onClick && props.onClick(checkIn);\n  }\n\n  function getColorClass(checkIn: string) {\n    if (!props.getPricePercentile) {\n      return;\n    }\n    const percentile = props.getPricePercentile(checkIn);\n    if (percentile === undefined) {\n      return \"no-price\";\n    }\n    if (percentile >= 0.9) {\n      return \"cost-1\";\n    } else if (percentile > 0.7) {\n      return \"cost-2\";\n    } else if (percentile > 0.3) {\n      return \"cost-3\";\n    } else if (percentile > 0.1) {\n      return \"cost-4\";\n    } else {\n      return \"cost-5\";\n    }\n  }\n};\n","import React, { useState } from \"react\";\nimport {\n  Cell,\n  Column,\n  Table,\n  TableLoadingOption,\n  RenderMode,\n  RowHeaderCell\n} from \"@blueprintjs/table\";\nimport { PriceGridData, StayDates } from \"./types\";\nimport \"./PriceGrid.scss\";\nimport { formatDate, getPriceFromGrid, datesToKey } from \"./utils\";\nimport { HTMLTable } from \"@blueprintjs/core\";\nimport { CheckOutRow } from \"./CheckOutRow\";\nimport { DateRange } from \"@blueprintjs/datetime\";\n\ninterface Props {\n  grid?: PriceGridData;\n  useBlueprintTable: boolean;\n  onSelectSquare: (square: StayDates) => void;\n  dateRange: DateRange;\n}\n\nconst TINT_AFTER_CLICKED = false;\n\nexport const PriceGrid: React.FC<Props> = (props: Props) => {\n  const [selectedSquare, setSelectedSquare] = useState<StayDates | undefined>(\n    undefined\n  );\n  const [hoveredSquare, setHoveredSquare] = useState<StayDates | undefined>(\n    undefined\n  );\n\n  if (props.useBlueprintTable) {\n    return (\n      <Table\n        defaultColumnWidth={85}\n        enableRowResizing={false}\n        enableColumnResizing={false}\n        enableMultipleSelection={false}\n        loadingOptions={\n          !props.grid\n            ? [\n                TableLoadingOption.CELLS,\n                TableLoadingOption.COLUMN_HEADERS,\n                TableLoadingOption.ROW_HEADERS\n              ]\n            : []\n        }\n        renderMode={RenderMode.BATCH}\n        rowHeaderCellRenderer={renderRowHeader}\n        numRows={props.grid ? props.grid.checkInDates.length : 25}\n        defaultRowHeight={25}\n      >\n        {renderColumns()}\n      </Table>\n    );\n  } else {\n    if (!props.grid) {\n      return null;\n    }\n    return (\n      <div className=\"grid\">\n        <div>\n          <p className=\"dates-label\">Check in</p>\n          <HTMLTable bordered condensed className=\"table-header\">\n            <thead>\n              <CheckOutRow checkInDates={props.grid.checkInDates} />\n            </thead>\n          </HTMLTable>\n          <div className=\"table-container\">\n            <HTMLTable bordered condensed className=\"html-table\">\n              <tbody>{props.grid.checkOutDates.map(renderRow)}</tbody>\n            </HTMLTable>\n          </div>\n        </div>\n        <p className=\"dates-label checkout-text\">Check out</p>\n      </div>\n    );\n  }\n\n  function renderRow(checkOut: string) {\n    if (!props.grid) {\n      return null;\n    }\n    return (\n      <CheckOutRow\n        key={checkOut}\n        checkOut={checkOut}\n        checkInDates={props.grid.checkInDates}\n        getPrice={getPrice(checkOut)}\n        onClick={onSelectSquare(checkOut)}\n        activeCheckIn={getActiveCheckIn(checkOut)}\n        getPricePercentile={getPricePercentile(checkOut)}\n        shouldTint={shouldTintSquare(checkOut)}\n        onHover={onHoverSquare(checkOut)}\n        offHover={onUnhoverSquare()}\n      />\n    );\n  }\n\n  function renderRowHeader(rowIndex: number) {\n    if (props.grid) {\n      return (\n        <RowHeaderCell className=\"row-header\">\n          {formatDate(props.grid.checkInDates[rowIndex]).date}\n        </RowHeaderCell>\n      );\n    }\n    return <RowHeaderCell>{rowIndex}</RowHeaderCell>;\n  }\n\n  function renderColumns() {\n    if (!props.grid) {\n      return <Column />;\n    }\n    return props.grid.checkOutDates.map(checkOut => {\n      return (\n        <Column\n          key={checkOut}\n          name={formatDate(checkOut).date}\n          cellRenderer={cellRenderer(checkOut)}\n        />\n      );\n    });\n  }\n\n  function cellRenderer(checkOut: string) {\n    return (rowIndex: number) => {\n      let priceStr = \"\";\n      if (props.grid) {\n        const checkIn = props.grid.checkInDates[rowIndex];\n        const price = getPriceFromGrid(props.grid, { checkIn, checkOut });\n        if (price !== undefined) {\n          priceStr = `$${price.toLocaleString()}`;\n        }\n      }\n      return <Cell>{priceStr}</Cell>;\n    };\n  }\n\n  function getPrice(checkOut: string) {\n    return (checkIn: string) => {\n      return getPriceFromGrid(props.grid, { checkIn, checkOut });\n    };\n  }\n\n  function onSelectSquare(checkOut: string) {\n    return (checkIn: string) => {\n      if (getPriceFromGrid(props.grid, { checkIn, checkOut }) === undefined) {\n        return;\n      }\n      setSelectedSquare({ checkIn, checkOut });\n      props.onSelectSquare && props.onSelectSquare({ checkIn, checkOut });\n    };\n  }\n\n  function onHoverSquare(checkOut: string) {\n    return (checkIn: string) => setHoveredSquare({ checkIn, checkOut });\n  }\n\n  function onUnhoverSquare() {\n    return () => setHoveredSquare(undefined);\n  }\n\n  function stayOverlaps(selected: StayDates, overlapper: StayDates) {\n    if (selected.checkIn === overlapper.checkIn) {\n      return selected.checkOut >= overlapper.checkOut;\n    }\n    if (selected.checkOut === overlapper.checkOut) {\n      return selected.checkIn <= overlapper.checkIn;\n    }\n    return false;\n  }\n\n  function shouldTintSquare(checkOut: string) {\n    return (checkIn: string): boolean => {\n      const overlapsSelected =\n        selectedSquare && stayOverlaps(selectedSquare, { checkIn, checkOut });\n      const overlapsHovered =\n        hoveredSquare && stayOverlaps(hoveredSquare, { checkIn, checkOut });\n\n      return overlapsHovered || (TINT_AFTER_CLICKED && overlapsSelected);\n    };\n  }\n\n  function getActiveCheckIn(checkOut: string) {\n    if (!TINT_AFTER_CLICKED) {\n      return;\n    }\n    if (!selectedSquare) {\n      return;\n    }\n    if (checkOut === selectedSquare.checkOut) {\n      return selectedSquare.checkIn;\n    }\n  }\n\n  function getPricePercentile(checkOut: string) {\n    return (checkIn: string): number | undefined => {\n      if (!props.grid) {\n        return;\n      }\n      const thisSquare = props.grid.map.get(datesToKey({ checkIn, checkOut }));\n      if (thisSquare !== undefined) {\n        return (thisSquare.rank - 1) / (props.grid.map.size - 1);\n      }\n    };\n  }\n};\n","import { List as ImmutableList } from \"immutable\";\nimport {\n  PriceGridData,\n  Hotel,\n  PricePoint,\n  PricePointWithPrice,\n  StayDates\n} from \"./types\";\n\nexport interface MatrixState {\n  pricePoints: {\n    byDates?: Map<string, PricePointWithPrice[]>;\n    byHotel: Map<string, PricePoint[]>;\n  };\n  grid?: PriceGridData;\n  hotels: ImmutableList<Hotel>;\n  selectedSquare?: StayDates;\n}\n\nexport interface LoadPricesAction {\n  type: \"LOAD_PRICES\";\n  grid: PriceGridData;\n  pricePointsByDates: Map<string, PricePointWithPrice[]>;\n}\n\nexport interface ToggleHotelSelection {\n  type: \"TOGGLE_HOTEL_SELECTION\";\n  hotel: Hotel;\n}\nexport interface SelectSquareAction {\n  type: \"SELECT_SQUARE\";\n  square: StayDates;\n}\n\nexport type Action =\n  | LoadPricesAction\n  | SelectSquareAction\n  | ToggleHotelSelection;\n\nexport function matrixReducer(state: MatrixState, action: Action): MatrixState {\n  switch (action.type) {\n    case \"LOAD_PRICES\":\n      return {\n        ...state,\n        grid: action.grid,\n        pricePoints: {\n          ...state.pricePoints,\n          byDates: action.pricePointsByDates\n        }\n      };\n    case \"SELECT_SQUARE\":\n      return {\n        ...state,\n        selectedSquare: action.square\n      };\n    case \"TOGGLE_HOTEL_SELECTION\":\n      return {\n        ...state,\n        hotels: state.hotels.map(hotel => ({\n          ...hotel,\n          selected:\n            hotel.name === action.hotel.name ? !hotel.selected : hotel.selected\n        }))\n      };\n  }\n}\n","import React, { useState } from \"react\";\nimport { NumberRange, RangeSlider, IRangeSliderProps } from \"@blueprintjs/core\";\nimport \"./Slider.scss\";\n\ninterface Props extends IRangeSliderProps {\n  value: NumberRange;\n  labelPrefix?: string;\n  labelSuffix?: string;\n}\n\nexport const Slider: React.FC<Props> = (props: Props) => {\n  const [localValue, setLocalValue] = useState<NumberRange>(props.value);\n  const { value, labelPrefix, labelSuffix, ...spreadableProps } = props;\n  return (\n    <div>\n      <RangeSlider\n        className=\"slider\"\n        labelRenderer={label => (\n          <span className=\"no-wrap\">\n            {(labelPrefix || \"\") + label.toLocaleString() + (labelSuffix || \"\")}\n          </span>\n        )}\n        labelStepSize={1}\n        stepSize={0.1}\n        {...spreadableProps}\n        value={localValue}\n        onChange={onChange}\n        onRelease={onRelease}\n      />\n    </div>\n  );\n\n  function onRelease(value: NumberRange) {\n    setLocalValue(value);\n    props.onRelease && props.onRelease(value);\n  }\n\n  function onChange(value: NumberRange) {\n    setLocalValue(value);\n    props.onChange && props.onChange(value);\n  }\n};\n","import React, { Fragment, useState } from \"react\";\nimport { Hotel, Bucket, ControlledBoundedRange, BoundedRange } from \"./types\";\nimport { Slider } from \"./Slider\";\nimport {\n  Tooltip,\n  Checkbox,\n  NumberRange,\n  Collapse,\n  Icon,\n  Intent\n} from \"@blueprintjs/core\";\nimport { DateRangeInput, DateRange } from \"@blueprintjs/datetime\";\nimport {\n  stringToDate,\n  hotelIsWithinDistance,\n  getBound,\n  getLabelStepSizeForLabelCount\n} from \"./utils\";\nimport { Set as ImmutableSet } from \"immutable\";\nimport \"./Filters.scss\";\nimport { IconNames } from \"@blueprintjs/icons\";\n\ninterface Props {\n  bucketedHotels: Bucket<Hotel>[];\n  onChangeHotelSelection: (hotel: Hotel) => void;\n\n  distanceRange: ControlledBoundedRange<NumberRange>;\n  stayLengthRange: ControlledBoundedRange<NumberRange>;\n  dateRange: BoundedRange<DateRange>;\n  priceRange: ControlledBoundedRange<NumberRange>;\n}\n\nexport const Filters: React.FC<Props> = (props: Props) => {\n  const [expandedBuckets, setExpandedBuckets] = useState<ImmutableSet<number>>(\n    ImmutableSet([props.bucketedHotels[0].ceiling])\n  );\n\n  console.log(getLabelStepSizeForLabelCount(props.priceRange.bounds, 3));\n  return (\n    <div className=\"filters\">\n      <h3>Filters</h3>\n      <p>Distance from Georgetown</p>\n      <Slider\n        min={getBound(props.distanceRange, \"min\")}\n        max={getBound(props.distanceRange, \"max\")}\n        value={props.distanceRange.selection}\n        onRelease={props.distanceRange.onChange}\n        labelStepSize={getLabelStepSizeForLabelCount(\n          props.distanceRange.bounds,\n          6\n        )}\n        labelSuffix=\"mi\"\n      />\n      <p>Stay Length</p>\n      <Slider\n        value={props.stayLengthRange.selection}\n        min={getBound(props.stayLengthRange, \"min\")}\n        max={getBound(props.stayLengthRange, \"max\")}\n        stepSize={1}\n        labelStepSize={getLabelStepSizeForLabelCount(\n          props.stayLengthRange.bounds,\n          3\n        )}\n        labelSuffix=\" days\"\n        onRelease={props.stayLengthRange.onChange}\n      />\n      <p>Price Per Night</p>\n      <Slider\n        value={props.priceRange.selection}\n        min={getBound(props.priceRange, \"min\")}\n        max={getBound(props.priceRange, \"max\")}\n        labelStepSize={getLabelStepSizeForLabelCount(\n          props.priceRange.bounds,\n          3\n        )}\n        stepSize={10}\n        labelPrefix=\"$\"\n        onRelease={props.priceRange.onChange}\n      />\n      <div className=\"date-range-container\">\n        <DateRangeInput\n          className=\"date-range\"\n          shortcuts={false}\n          formatDate={date => date.toDateString()}\n          parseDate={stringToDate}\n          minDate={props.dateRange.bounds[0]}\n          maxDate={props.dateRange.bounds[1]}\n          onChange={props.dateRange.onChange}\n        />\n      </div>\n      <div className=\"hotels\">\n        {props.bucketedHotels.map(bucket => (\n          <Fragment key={`${bucket.ceiling}`}>\n            {renderTitle(bucket)}\n            <Collapse isOpen={expandedBuckets.has(getKeyFromBucket(bucket))}>\n              {bucket.items.map(hotel => {\n                const outOfRange = !hotelIsWithinDistance(\n                  hotel,\n                  props.distanceRange.selection\n                );\n                return (\n                  <div key={hotel.name}>\n                    <Tooltip\n                      content=\"Hotel is not in the selected distance range\"\n                      disabled={!outOfRange}\n                    >\n                      <Checkbox\n                        checked={hotel.selected && !outOfRange}\n                        disabled={outOfRange}\n                        onChange={() => props.onChangeHotelSelection(hotel)}\n                        key={hotel.name}\n                        labelElement={\n                          <span className=\"hotel-name\">\n                            {hotel.name}\n                            <span className=\"distance\">{hotel.distance}mi</span>\n                          </span>\n                        }\n                      />\n                    </Tooltip>\n                  </div>\n                );\n              })}\n            </Collapse>\n          </Fragment>\n        ))}\n      </div>\n    </div>\n  );\n\n  function renderTitle(bucket: Bucket<Hotel>) {\n    const expanded = expandedBuckets.has(getKeyFromBucket(bucket));\n    return (\n      <>\n        <h4 className=\"clickable\" onClick={toggleBucketExpansion(bucket)}>\n          <Icon\n            icon={expanded ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT}\n          />\n          {renderBucketTitle(bucket)}\n          {bucket.items.some(hotel => hotel.selected) && (\n            <Icon\n              className=\"selected-icon\"\n              icon={IconNames.TICK}\n              intent={Intent.SUCCESS}\n            />\n          )}\n        </h4>\n      </>\n    );\n  }\n\n  function renderBucketTitle(bucket: Bucket<Hotel>) {\n    const suffix = \"miles\";\n    if (bucket.ceiling === Infinity) {\n      return `${bucket.floor}+ ${suffix}`;\n    }\n    return `${bucket.floor} – ${bucket.ceiling} ${suffix}`;\n  }\n\n  function toggleBucketExpansion(bucket: Bucket<Hotel>) {\n    const key = getKeyFromBucket(bucket);\n    return () => {\n      setExpandedBuckets(\n        expandedBuckets.has(key)\n          ? expandedBuckets.remove(key)\n          : expandedBuckets.add(key)\n      );\n    };\n  }\n\n  function getKeyFromBucket(bucket: Bucket<Hotel>) {\n    return bucket.ceiling;\n  }\n};\n","import { Classes, NumberRange } from \"@blueprintjs/core\";\nimport { List as ImmutableList } from \"immutable\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState\n} from \"react\";\nimport { AvailableRooms } from \"./AvailableRooms\";\nimport { PriceGrid } from \"./PriceGrid\";\nimport \"./MarriottMatrix.scss\";\nimport { matrixReducer, MatrixState } from \"./matrixReducer\";\nimport {\n  Bucket,\n  Hotel,\n  PriceGridMap,\n  PricePoint,\n  PricePointWithPrice,\n  StayDates\n} from \"./types\";\nimport {\n  datesToKey,\n  DEFAULT_HOTELS,\n  getLast,\n  hotelIsWithinDistance,\n  dateIsInRange,\n  PricePointMap,\n  pricePointIsWithinStayLengthRange,\n  getStayLength,\n  stringToDate,\n  getBucketCeiling,\n  pricePointIsWithinPriceRange,\n  DEFAULT_MIN_STAY_LENGTH,\n  DEFAULT_MIN_DISTANCE,\n  DEFAULT_MIN_PRICE\n} from \"./utils\";\nimport { Filters } from \"./Filters\";\nimport { DateRange } from \"@blueprintjs/datetime\";\nimport classNames from \"classnames\";\n\nfunction sortDates(dates: Set<string>): string[] {\n  return Array.from(dates).sort();\n}\n\ninterface Props {\n  pricePoints: PricePoint[];\n}\n\nfunction createInitialState(props: Props): MatrixState {\n  const hotelToPricePoints = new PricePointMap();\n  const selectedHotelNames = new Set<string>();\n  const hotels: Hotel[] = [];\n  props.pricePoints.forEach(pricePoint => {\n    const name = pricePoint.hotelName;\n\n    hotelToPricePoints.addPricePoint(name, pricePoint);\n\n    if (!selectedHotelNames.has(name)) {\n      selectedHotelNames.add(name);\n      hotels.push({\n        name: name,\n        distance: pricePoint.distance,\n        selected: DEFAULT_HOTELS.includes(name)\n      });\n    }\n  });\n\n  hotels.sort((a, b) => a.distance - b.distance);\n\n  return {\n    pricePoints: {\n      byHotel: hotelToPricePoints\n    },\n    hotels: ImmutableList(hotels)\n  };\n}\n\nexport const MarriottMatrix: React.FC<Props> = (props: Props) => {\n  const [viewingAvailableRooms, setViewingAvailableRooms] = useState(false);\n\n  const [state, dispatch] = useReducer(\n    matrixReducer,\n    createInitialState(props)\n  );\n\n  const [bucketedHotels, nameToHotel, anyHotelsSelected] = useMemo(() => {\n    const hotels = state.hotels;\n    const buckets: Bucket<Hotel>[] = [];\n    const nameToHotel = new Map<string, Hotel>();\n    let anyHotelsSelected = false;\n\n    hotels.forEach(hotel => {\n      nameToHotel.set(hotel.name, hotel);\n      anyHotelsSelected = anyHotelsSelected || hotel.selected;\n      if (\n        buckets.length === 0 ||\n        hotel.distance > buckets[buckets.length - 1].ceiling\n      ) {\n        buckets.push({\n          floor: buckets.length === 0 ? 0 : buckets[buckets.length - 1].ceiling,\n          ceiling: getBucketCeiling(hotel.distance),\n          items: [hotel]\n        });\n      } else {\n        getLast(buckets).items.push(hotel);\n      }\n    });\n\n    return [buckets, nameToHotel, anyHotelsSelected];\n  }, [state.hotels]);\n\n  const onSelectSquare = useCallback(\n    (square: StayDates) => {\n      setViewingAvailableRooms(true);\n      dispatch({\n        type: \"SELECT_SQUARE\",\n        square\n      });\n    },\n    [setViewingAvailableRooms, dispatch]\n  );\n\n  const [minDate, maxDate, maxPrice, maxStayLength] = useMemo(() => {\n    let minDate = props.pricePoints[0].stayDates.checkIn;\n    let maxDate = props.pricePoints[0].stayDates.checkOut;\n\n    let maxPrice = 0;\n\n    let maxStayLength = 1;\n    props.pricePoints.forEach(pricePoint => {\n      const { checkIn, checkOut } = pricePoint.stayDates;\n      if (checkIn < minDate) {\n        minDate = checkIn;\n      }\n      if (checkOut > maxDate) {\n        maxDate = checkOut;\n      }\n\n      const price = pricePoint.pricePerNight;\n      if (price && price > maxPrice) {\n        maxPrice = price;\n      }\n\n      const stayLength = getStayLength(pricePoint.stayDates);\n      maxStayLength = Math.max(stayLength, maxStayLength);\n    });\n    return [minDate, maxDate, maxPrice, maxStayLength];\n  }, [props.pricePoints]);\n\n  const maxDistance = useMemo(\n    () => state.hotels.last({ distance: 5 }).distance,\n    [state.hotels]\n  );\n\n  const [distanceRange, setDistanceRange] = useState<NumberRange>([\n    DEFAULT_MIN_DISTANCE,\n    maxDistance\n  ]);\n\n  const [dateRange, setDateRange] = useState<DateRange>([\n    stringToDate(minDate),\n    stringToDate(maxDate)\n  ]);\n\n  const [stayLengthRange, setStayLengthRange] = useState<NumberRange>([\n    DEFAULT_MIN_STAY_LENGTH,\n    maxStayLength\n  ]);\n\n  const [priceRange, setPriceRange] = useState<NumberRange>([\n    DEFAULT_MIN_PRICE,\n    maxPrice\n  ]);\n\n  useEffect(() => {\n    const datesToPricePoints = new PricePointMap<PricePointWithPrice>();\n    const priceGridMap = new Map<string, PricePointWithPrice>();\n    const checkInDates = new Set<string>();\n    const checkOutDates = new Set<string>();\n\n    function maybeAddPricePointToGrid(pricePoint: PricePoint) {\n      const {\n        hotelName,\n        pricePerNight,\n        soldOut,\n        stayDates: { checkIn, checkOut }\n      } = pricePoint;\n\n      for (const date of [checkIn, checkOut]) {\n        if (!dateIsInRange(date, dateRange)) {\n          return;\n        }\n      }\n\n      checkInDates.add(checkIn);\n      checkOutDates.add(checkOut);\n\n      if (pricePerNight === null || pricePerNight === undefined || soldOut) {\n        return;\n      }\n\n      const hotel = nameToHotel.get(hotelName);\n      if (\n        !hotel ||\n        (anyHotelsSelected && !hotel.selected) ||\n        !hotelIsWithinDistance(hotel, distanceRange) ||\n        !pricePointIsWithinStayLengthRange(\n          pricePoint.stayDates,\n          stayLengthRange\n        ) ||\n        !pricePointIsWithinPriceRange(pricePerNight, priceRange)\n      ) {\n        return;\n      }\n\n      const pricePointWithPrice = {\n        ...pricePoint,\n        pricePerNight\n      };\n      const datesString = datesToKey({ checkIn, checkOut });\n      const bestPriceForStay = priceGridMap.get(datesString);\n      if (!bestPriceForStay || pricePerNight < bestPriceForStay.pricePerNight) {\n        priceGridMap.set(datesString, pricePointWithPrice);\n      }\n      datesToPricePoints.addPricePoint(datesString, pricePointWithPrice);\n    }\n\n    if (anyHotelsSelected) {\n      for (const [\n        hotelName,\n        pricePoints\n      ] of state.pricePoints.byHotel.entries()) {\n        const hotelForPricePoint = nameToHotel.get(hotelName);\n        if (\n          hotelForPricePoint &&\n          hotelForPricePoint.selected &&\n          hotelIsWithinDistance(hotelForPricePoint, distanceRange)\n        ) {\n          pricePoints.forEach(pricePoint => {\n            if (\n              pricePointIsWithinStayLengthRange(\n                pricePoint.stayDates,\n                stayLengthRange\n              )\n            ) {\n              maybeAddPricePointToGrid(pricePoint);\n            }\n          });\n        }\n      }\n    } else {\n      props.pricePoints.forEach(maybeAddPricePointToGrid);\n    }\n\n    // add ranks\n    const sortedPrices = [...priceGridMap.entries()].sort(\n      ([_, a], [__, b]) => a.pricePerNight - b.pricePerNight\n    );\n    const mapWithRanks: PriceGridMap = new Map();\n    sortedPrices.forEach(([dateString, _], i) => {\n      const pricePoint = priceGridMap.get(dateString);\n      if (pricePoint) {\n        mapWithRanks.set(dateString, {\n          ...pricePoint,\n          rank: i + 1\n        });\n      }\n    });\n\n    dispatch({\n      type: \"LOAD_PRICES\",\n      pricePointsByDates: datesToPricePoints,\n      grid: {\n        map: mapWithRanks,\n        checkInDates: sortDates(checkInDates),\n        checkOutDates: sortDates(checkOutDates)\n      }\n    });\n  }, [\n    props.pricePoints,\n    state.hotels,\n    dateRange,\n    distanceRange,\n    stayLengthRange,\n    priceRange,\n    anyHotelsSelected,\n    nameToHotel,\n    state.pricePoints.byHotel\n  ]);\n\n  return (\n    <div className={classNames(\"container\", Classes.DARK)}>\n      <div className=\"sidebar\">{renderFilters()}</div>\n      <div className=\"content\">\n        <h2>Marriott Matrix</h2>\n        {renderTable()}\n        <AvailableRooms\n          selectedSquare={state.selectedSquare}\n          pricePoints={getPricePointsForStay(state.selectedSquare)}\n          visible={viewingAvailableRooms}\n          onClose={() => setViewingAvailableRooms(false)}\n        />\n      </div>\n    </div>\n  );\n\n  function renderTable() {\n    if (!state.grid) {\n      return null;\n    }\n    return (\n      <PriceGrid\n        grid={state.grid}\n        dateRange={dateRange}\n        useBlueprintTable={false}\n        onSelectSquare={onSelectSquare}\n      />\n    );\n  }\n\n  function renderFilters() {\n    if (!state.grid) {\n      return null;\n    }\n    return (\n      <Filters\n        dateRange={{\n          bounds: [stringToDate(minDate), stringToDate(maxDate)],\n          onChange: setDateRange\n        }}\n        distanceRange={{\n          selection: distanceRange,\n          bounds: [DEFAULT_MIN_DISTANCE, maxDistance],\n          onChange: setDistanceRange\n        }}\n        stayLengthRange={{\n          selection: stayLengthRange,\n          bounds: [DEFAULT_MIN_STAY_LENGTH, maxStayLength],\n          onChange: setStayLengthRange\n        }}\n        priceRange={{\n          selection: priceRange,\n          bounds: [DEFAULT_MIN_PRICE, maxPrice],\n          onChange: setPriceRange\n        }}\n        bucketedHotels={bucketedHotels}\n        onChangeHotelSelection={hotel => {\n          dispatch({\n            type: \"TOGGLE_HOTEL_SELECTION\",\n            hotel\n          });\n        }}\n      />\n    );\n  }\n\n  function getPricePointsForStay(\n    stay?: StayDates\n  ): PricePointWithPrice[] | undefined {\n    if (!state.grid || !stay || !state.pricePoints.byDates) {\n      return [];\n    }\n    return state.pricePoints.byDates.get(datesToKey(stay));\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { MarriottMatrix } from \"./MarriottMatrix\";\nimport prices from \"./prices.json\";\nimport { ScrapedPricePoint, PricePoint } from \"./types\";\nimport moment from \"moment\";\n\nfunction useWindowWidth() {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n\n  return width;\n}\n\nfunction processScrapedPricePoint(pricePoint: ScrapedPricePoint): PricePoint {\n  const [checkIn, checkOut] = pricePoint.dates;\n\n  // TODO: url generation should be on backend\n  let bookingLink: string | undefined = undefined;\n  if (pricePoint.booking_link) {\n    const propertyCodeMatch = pricePoint.booking_link.match(\n      /propertyCode=([A-Z]+)&/\n    );\n    if (propertyCodeMatch === null) {\n      throw Error(\n        \"No property code match in booking link: \" + pricePoint.booking_link\n      );\n    }\n    const propertyCode = propertyCodeMatch[1];\n\n    bookingLink =\n      \"https://www.marriott.com/reservation/availabilitySearch.mi?&propertyCode=\" +\n      propertyCode +\n      \"&fromDate=\" +\n      moment(checkIn).format(\"MM/DD/YYYY\") +\n      \"&toDate=\" +\n      moment(checkOut).format(\"MM/DD/YYYY\") +\n      \"&numberOfRooms=1&numberOfGuests=1&currency=USD\";\n\n    if (pricePoint.corporate_rate) {\n      bookingLink += \"&clusterCode=corp&corporateCode=P5R\";\n    }\n  }\n\n  return {\n    hotelName: pricePoint.name,\n    stayDates: { checkIn, checkOut },\n    corporateRate: pricePoint.corporate_rate,\n    pricePerNight: pricePoint.price_per_night,\n    soldOut: pricePoint.sold_out,\n    distance: pricePoint.distance,\n    bookingLink\n  };\n}\n\nconst App: React.FC = () => {\n  const width = useWindowWidth();\n  if (width < 1000) {\n    return <p className=\"too-small\">Desktop only :-)</p>;\n  }\n  return <MarriottMatrix pricePoints={prices.map(processScrapedPricePoint)} />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}