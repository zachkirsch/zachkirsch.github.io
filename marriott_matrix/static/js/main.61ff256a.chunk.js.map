{"version":3,"sources":["types.ts","utils.tsx","AvailableRooms.tsx","CheckOutRow.tsx","PriceGrid.tsx","matrixReducer.ts","Slider.tsx","Filters.tsx","MarriottMatrix.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["isPresent","value","undefined","PricePointBounds","bounds","getMinCandidate","getMaxCandidate","Object","classCallCheck","this","createClass","key","pricePoint","minCandidate","maxCandidate","_this$bounds","slicedToArray","min","max","DEFAULT_HOTELS","formatDate","date","m","moment","dayOfWeek","format","year","dateToKey","formatted","concat","datesToKey","stay","checkIn","checkOut","map","join","getStayLength","diff","pricePointIsWithinStayLengthRange","stayLengthRange","length","hotelIsWithinDistance","hotel","distanceRange","distance","datesAreChronological","first","second","dateIsInRange","range","getPriceFromGrid","grid","get","pricePerNight","PricePointMap","_Map","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","prototype","call","list","Error","push","wrapNativeSuper","Map","getBound","bound","defaultValue","setBound","round","roundToNearest","Math","getLabelStepSizeForLabelCount","labelCount","stepSize","generateBookingLink","useCorporateCode","propertyCode","url","URL","params","URLSearchParams","append","toString","getAllDatesInRange","dates","momentDates","d","startOf","current","all","toDate","add","AvailableRooms","props","hotels","useMemo","byName","pricePoints","forEach","currentBest","hotelName","cheapestRate","set","corporateRate","bookingLink","Array","from","values","sort","a","b","react_default","createElement","dialog","className","classNames","Classes","DARK","isOpen","visible","title","selectedSquare","Fragment","renderTitle","onClose","popover","content","menu","menuItem","icon","IconNames","DOCUMENT_OPEN","text","onClick","openSearch","position","Position","RIGHT","buttons","rightIcon","CARET_RIGHT","htmlTable","striped","interactive","openHotelBookingLink","price","openLink","useCorporateRate","window","open","CheckOutRow","checkInDates","getPrice","onClickCell","onMouseEnter","onHover","onMouseLeave","offHover","clickable","active","activeCheckIn","tint","shouldTint","getColorClass","text_text","ellipsize","renderDate","dateObj","multiline","_formatDate","getPricePercentile","percentile","TINT_AFTER_CLICKED","PriceGrid","console","log","_useState","useState","_useState2","setSelectedSquare","_useState3","_useState4","hoveredSquare","setHoveredSquare","useBlueprintTable","table","defaultColumnWidth","enableRowResizing","enableColumnResizing","enableMultipleSelection","loadingOptions","TableLoadingOption","CELLS","COLUMN_HEADERS","ROW_HEADERS","renderMode","RenderMode","BATCH","rowHeaderCellRenderer","rowIndex","rowHeaderCell","numRows","defaultRowHeight","column","checkOutDates","name","cellRenderer","renderColumns","bordered","condensed","CheckOutRow_CheckOutRow","onSelectSquare","getActiveCheckIn","shouldTintSquare","onHoverSquare","priceStr","toLocaleString","cell","stayOverlaps","selected","overlapper","overlapsSelected","thisSquare","rank","size","matrixReducer","state","action","type","objectSpread","byDates","pricePointsByDates","square","Slider","localValue","setLocalValue","labelPrefix","labelSuffix","spreadableProps","objectWithoutProperties","rangeSlider","assign","labelRenderer","label","singular","plural","onChange","onRelease","Filters","ImmutableSet","bucketedHotels","ceiling","expandedBuckets","setExpandedBuckets","Slider_Slider","selection","labelStepSize","priceRange","dateRangeInput","shortcuts","toDateString","parseDate","Date","minDate","dateRange","maxDate","bucket","react","expanded","has","getKeyFromBucket","anySelected","items","some","toggleBucketExpansion","CARET_DOWN","Infinity","floor","renderBucketTitle","TICK","intent","Intent","SUCCESS","collapse","outOfRange","tooltip","disabled","controls","checked","onChangeHotelSelection","labelElement","remove","MarriottMatrix","viewingAvailableRooms","setViewingAvailableRooms","_useReducer","useReducer","hotelToPricePoints","selectedHotelNames","Set","addPricePoint","includes","byHotel","ImmutableList","createInitialState","_useReducer2","dispatch","_useBounds","PricePointBound","p","stayDates","updateBounds","useRangeState","useBounds","_useBounds2","dateBounds","priceBounds","stayLengthBounds","distanceBounds","_useMemo","buckets","nameToHotel","anyHotelsSelected","array","_useMemo2","useCallback","useEffect","datesToPricePoints","priceGridMap","dateFormat","maybeAddPricePointToGrid","soldOut","_pricePoint$stayDates","_i","_arr","pricePointWithPrice","datesString","bestPriceForStay","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","_ref2","hotelForPricePoint","err","return","sortedPrices","toConsumableArray","_ref4","_ref5","_ref6","_ref7","mapWithRanks","_ref8","i","_ref9","dateString","Filters_Filters","renderFilters","PriceGrid_PriceGrid","renderTable","AvailableRooms_AvailableRooms","getPricePointsForStay","processScrapedPricePoint","corporate_rate","price_per_night","sold_out","_dates$map","_dates$map2","booking_link","propertyCodeMatch","match","App","innerWidth","width","setWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","MarriottMatrix_MarriottMatrix","prices","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61ff256a.chunk.js","sourcesContent":["export type Nullable<T> = T | null | undefined;\n\nexport function isPresent<T>(value: Nullable<T>): value is T {\n  return value !== null && value !== undefined;\n}\n\nexport interface ScrapedPricePoint {\n  name: string;\n  dates: [string, string];\n  corporate_rate: boolean;\n  price_per_night: number | undefined;\n  sold_out: boolean;\n  distance: number;\n  booking_link: string;\n}\n\nexport interface StayDates {\n  checkIn: Date;\n  checkOut: Date;\n}\n\nexport interface PricePoint {\n  hotelName: string;\n  stayDates: StayDates;\n  corporateRate: boolean;\n  pricePerNight?: number | null;\n  soldOut: boolean;\n  distance: number;\n  bookingLink?: string;\n}\n\nexport interface PricePointWithPrice extends PricePoint {\n  pricePerNight: number;\n}\n\nexport interface RankedPricePrice extends PricePointWithPrice {\n  rank: number;\n}\n\nexport type PriceGridMap = Map<string, RankedPricePrice>;\n\nexport interface Hotel {\n  name: string;\n  distance: number;\n  selected: boolean;\n}\n\nexport interface PriceGridData {\n  map: PriceGridMap;\n  checkInDates: Date[];\n  checkOutDates: Date[];\n}\n\nexport interface Bucket<T> {\n  floor: number;\n  ceiling: number;\n  items: T[];\n}\n\nexport interface BoundedRange<T> {\n  bounds: [T, T];\n  onChange: (newRange: [T, T]) => void;\n}\nexport interface ControlledBoundedRange<T> extends BoundedRange<T> {\n  selection: [T, T];\n}\n\ntype PricePointParser<T> = (pricePoint: PricePoint) => Nullable<T>;\n\nexport class PricePointBounds<T> {\n  constructor(\n    public bounds: [T, T],\n    private readonly getMinCandidate: PricePointParser<T>,\n    private readonly getMaxCandidate?: PricePointParser<T>\n  ) {}\n\n  public updateBounds(pricePoint: PricePoint) {\n    const minCandidate = this.getMinCandidate(pricePoint);\n    const maxCandidate = (this.getMaxCandidate || this.getMinCandidate)(\n      pricePoint\n    );\n    let [min, max] = this.bounds;\n    if (isPresent(minCandidate) && minCandidate < min) {\n      min = minCandidate;\n    }\n    if (isPresent(maxCandidate) && maxCandidate > max) {\n      max = maxCandidate;\n    }\n    this.bounds = [min, max];\n  }\n}\n","import moment from \"moment\";\nimport {\n  PricePoint,\n  Hotel,\n  PriceGridData,\n  StayDates,\n  BoundedRange,\n  PricePointBounds as PricePointBound\n} from \"./types\";\nimport { NumberRange } from \"@blueprintjs/core\";\nimport { DateRange } from \"@blueprintjs/datetime\";\nimport { useMemo, useState } from \"react\";\n\nexport const DEFAULT_HOTELS: string[] = [\n  \"The Ritz-Carlton Georgetown, Washington, D.C.\",\n  \"The Westin Georgetown, Washington D.C.\",\n  \"Washington Marriott Georgetown\",\n  \"The Ritz-Carlton, Washington, DC\",\n  \"The Mayflower Hotel, Autograph Collection\",\n  \"The Westin Georgetown, Washington D.C.\"\n];\n\nexport function formatDate(date: Date) {\n  const m = moment(date);\n  return {\n    dayOfWeek: m.format(\"ddd\"),\n    date: m.format(\"M/D\"),\n    year: m.format(\"YYYY\")\n  };\n}\n\nexport function dateToKey(date: Date) {\n  const formatted = formatDate(date);\n  return `${formatted.date}/${formatted.year}`;\n}\n\nexport function datesToKey(stay: StayDates): string {\n  return [stay.checkIn, stay.checkOut].map(dateToKey).join(\"-\");\n}\n\nexport function getLast<T>(array: T[]): T {\n  return array[array.length - 1];\n}\n\nexport function getStayLength(stay: StayDates): number {\n  return moment(stay.checkOut).diff(moment(stay.checkIn), \"days\");\n}\n\nexport function pricePointIsWithinStayLengthRange(\n  stay: StayDates,\n  stayLengthRange: NumberRange\n) {\n  const length = getStayLength(stay);\n  return length >= stayLengthRange[0] && length <= stayLengthRange[1];\n}\n\nexport function hotelIsWithinDistance(\n  hotel: Hotel,\n  distanceRange: NumberRange\n) {\n  return (\n    hotel.distance >= distanceRange[0] && hotel.distance <= distanceRange[1]\n  );\n}\n\nexport function pricePointIsWithinPriceRange(\n  price: number,\n  range: NumberRange\n) {\n  return price >= range[0] && price <= range[1];\n}\n\nexport function datesAreChronological(first?: Date, second?: Date): boolean {\n  if (!first || !second) {\n    return true;\n  }\n  return moment(second).diff(moment(first)) >= 0;\n}\n\nexport function dateIsInRange(date: Date, range: DateRange) {\n  return (\n    datesAreChronological(range[0], date) &&\n    datesAreChronological(date, range[1])\n  );\n}\n\nexport function getPriceFromGrid(\n  grid: PriceGridData | undefined,\n  stay: StayDates\n) {\n  if (grid) {\n    const key = datesToKey(stay);\n    const pricePoint = grid.map.get(key);\n    return pricePoint && pricePoint.pricePerNight;\n  }\n}\n\nexport class PricePointMap<V extends PricePoint> extends Map<string, V[]> {\n  public addPricePoint(key: string, pricePoint: V) {\n    if (this.get(key) === undefined) {\n      super.set(key, []);\n    }\n    const list = super.get(key);\n    if (list === undefined) {\n      throw Error(`No list for key: ${key} in PricePointMap`);\n    }\n    list.push(pricePoint);\n    return this;\n  }\n\n  public set(): this {\n    throw Error(\n      \"Calling set() in a PricePointMap is disallowed. Use addPricePoint instead.\"\n    );\n  }\n}\n\nexport function getBucketCeiling(value: number) {\n  if (value <= 1) {\n    return 1;\n  } else if (value <= 2) {\n    return 2;\n  } else if (value <= 5) {\n    return 5;\n  } else if (value <= 10) {\n    return 10;\n  } else {\n    return Infinity;\n  }\n}\n\nexport function getBound<T>(\n  range: BoundedRange<T>,\n  bound: \"max\" | \"min\",\n  defaultValue?: T\n) {\n  const setBound = range.bounds[bound === \"min\" ? 0 : 1];\n  return setBound !== undefined ? setBound : defaultValue;\n}\n\nexport function round(value: number, roundToNearest: number) {\n  return Math.round(value / roundToNearest) * roundToNearest;\n}\n\nexport function getLabelStepSizeForLabelCount(\n  range: NumberRange,\n  labelCount: number\n) {\n  const stepSize = (range[1] - range[0]) / labelCount;\n  if (stepSize < 10) {\n    return round(stepSize, 1);\n  } else if (stepSize < 100) {\n    return round(stepSize, 10);\n  } else if (stepSize < 1000) {\n    return round(stepSize, 100);\n  } else {\n    return round(stepSize, 1000);\n  }\n}\n\nexport function generateBookingLink(\n  checkIn: Date,\n  checkOut: Date,\n  useCorporateCode: boolean,\n  propertyCode?: string\n) {\n  const url = new URL(\n    propertyCode\n      ? \"/reservation/availabilitySearch.mi\"\n      : \"/search/submitSearch.mi\",\n    \"https://www.marriott.com\"\n  );\n\n  const params = new URLSearchParams();\n  params.append(\"fromDate\", moment(checkIn).format(\"MM/DD/YYYY\"));\n  params.append(\"toDate\", moment(checkOut).format(\"MM/DD/YYYY\"));\n  params.append(\"numberOfRooms\", \"1\");\n  params.append(\"numberOfGuests\", \"1\");\n  params.append(\"currency\", \"USD\");\n\n  if (propertyCode) {\n    params.append(\"propertyCode\", propertyCode);\n  } else {\n    params.append(\n      \"destinationAddress.destination\",\n      \"Georgetown,+Washington,+DC,+USA\"\n    );\n  }\n\n  if (useCorporateCode) {\n    params.append(\"clusterCode\", \"corp\");\n    params.append(\"corporateCode\", \"P5R\");\n  }\n\n  return `${url.toString()}?${params.toString()}`;\n}\n\nexport function getAllDatesInRange(dates: string[], format: string): Date[] {\n  if (dates.length === 0) {\n    return [];\n  }\n\n  const momentDates = dates.map(d => moment(d, format).startOf(\"day\"));\n  let current = moment.min(momentDates);\n  const max = moment.max(momentDates);\n\n  const all = [];\n  while (current <= max) {\n    all.push(current.toDate());\n    current.add(1, \"days\");\n  }\n  return all;\n}\n\ntype AllBounds = [\n  PricePointBound<Date | undefined>,\n  PricePointBound<number>,\n  PricePointBound<number>,\n  PricePointBound<number>\n];\n\ninterface BoundWithState<T> {\n  bounds: [T, T];\n  selection: [T, T];\n  onChange: React.Dispatch<React.SetStateAction<[T, T]>>;\n}\ntype AllBoundsWithState = [\n  BoundWithState<Date | undefined>,\n  BoundWithState<number>,\n  BoundWithState<number>,\n  BoundWithState<number>\n];\nexport function useBounds(pricePoints: PricePoint[]): AllBoundsWithState {\n  const bounds: AllBounds = useMemo(() => {\n    const dateBound = new PricePointBound<Date | undefined>(\n      [\n        moment(\"2020-01-01\", \"YYYY-MM-DD\").toDate(),\n        moment(\"2000-01-01\", \"YYYY-MM-DD\").toDate()\n      ],\n      p => moment(p.stayDates.checkIn).toDate(),\n      p => moment(p.stayDates.checkOut).toDate()\n    );\n\n    const priceBound = new PricePointBound<number>(\n      [Infinity, -1],\n      p => p.pricePerNight\n    );\n\n    const stayLengthBound = new PricePointBound<number>([Infinity, -1], p =>\n      getStayLength(p.stayDates)\n    );\n\n    const distanceBound = new PricePointBound<number>(\n      [Infinity, -1],\n      p => p.distance\n    );\n\n    const bounds: AllBounds = [\n      dateBound,\n      priceBound,\n      stayLengthBound,\n      distanceBound\n    ];\n\n    pricePoints.forEach(pricePoint => {\n      bounds.forEach(bound => {\n        bound.updateBounds(pricePoint);\n      });\n    });\n\n    return bounds;\n  }, [pricePoints]);\n\n  function useRangeState<T>(bound: PricePointBound<T>): BoundWithState<T> {\n    const [selection, onChange] = useState<[T, T]>(bound.bounds);\n    return {\n      bounds: bound.bounds,\n      selection,\n      onChange\n    };\n  }\n\n  return [\n    useRangeState(bounds[0]),\n    useRangeState(bounds[1]),\n    useRangeState(bounds[2]),\n    useRangeState(bounds[3])\n  ];\n}\n","import React, { useMemo } from \"react\";\nimport { PricePointWithPrice, StayDates } from \"./types\";\nimport \"./AvailableRooms.scss\";\nimport {\n  HTMLTable,\n  Dialog,\n  Classes,\n  Popover,\n  Button,\n  Menu,\n  MenuItem,\n  Position\n} from \"@blueprintjs/core\";\nimport moment from \"moment\";\nimport classNames from \"classnames\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport { generateBookingLink } from \"./utils\";\n\ninterface Props {\n  visible: boolean;\n  pricePoints?: PricePointWithPrice[];\n  selectedSquare: StayDates;\n  onClose: () => void;\n}\n\ninterface HotelPrice {\n  hotelName: string;\n  cheapestRate?: number;\n  corporateRate: boolean;\n  bookingLink?: string;\n}\n\nfunction getRate(price: HotelPrice) {\n  if (price.cheapestRate === null) {\n    return \"No Rate Available\";\n  }\n  return `$${price.cheapestRate} (${\n    price.corporateRate ? \"Corporate Rate\" : \"Regular Rate\"\n  })`;\n}\n\nexport const AvailableRooms: React.FC<Props> = (props: Props) => {\n  const hotels = useMemo(() => {\n    const byName = new Map<string, HotelPrice>();\n    if (props.pricePoints) {\n      props.pricePoints.forEach(pricePoint => {\n        const currentBest = byName.get(pricePoint.hotelName);\n        if (\n          currentBest === undefined ||\n          currentBest.cheapestRate === undefined ||\n          (pricePoint.pricePerNight !== undefined &&\n            pricePoint.pricePerNight < currentBest.cheapestRate)\n        ) {\n          byName.set(pricePoint.hotelName, {\n            hotelName: pricePoint.hotelName,\n            cheapestRate: pricePoint.pricePerNight,\n            corporateRate: pricePoint.corporateRate,\n            bookingLink: pricePoint.bookingLink\n          });\n        }\n      });\n    }\n    return Array.from(byName.values()).sort((a, b) => {\n      if (a.cheapestRate === null || a.cheapestRate === undefined) {\n        return 1;\n      } else if (b.cheapestRate === null || b.cheapestRate === undefined) {\n        return -1;\n      }\n      return a.cheapestRate - b.cheapestRate;\n    });\n  }, [props]);\n\n  return (\n    <Dialog\n      className={classNames(\"available-rooms\", Classes.DARK)}\n      isOpen={props.visible}\n      title={renderTitle()}\n      onClose={props.onClose}\n    >\n      <div className=\"body\">\n        <Popover content={renderBookMenu()} position={Position.RIGHT}>\n          <Button\n            text={\"View all options on Marriott.com\"}\n            rightIcon={IconNames.CARET_RIGHT}\n          />\n        </Popover>\n        <div className=\"table-container\">\n          <HTMLTable className=\"table\" striped interactive>\n            <tbody>\n              {hotels.map(hotel => (\n                <tr key={hotel.hotelName} onClick={openHotelBookingLink(hotel)}>\n                  <td>{hotel.hotelName}</td>\n                  <td>{getRate(hotel)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </HTMLTable>\n        </div>\n      </div>\n    </Dialog>\n  );\n\n  function renderTitle() {\n    if (!props.selectedSquare) {\n      return null;\n    }\n    const dates = [\n      props.selectedSquare.checkIn,\n      props.selectedSquare.checkOut\n    ].map(d => moment(d).format(\"dddd, MMMM D, YYYY\"));\n\n    return (\n      <>\n        {dates[0]}\n        <span className=\"space\" />\n        —\n        <span className=\"space\" />\n        {dates[1]}\n      </>\n    );\n  }\n\n  function renderBookMenu() {\n    return (\n      <Menu>\n        <MenuItem\n          icon={IconNames.DOCUMENT_OPEN}\n          text=\"Regular Rate\"\n          onClick={openSearch(false)}\n        />\n        <MenuItem\n          icon={IconNames.DOCUMENT_OPEN}\n          text=\"Corporate Rate\"\n          onClick={openSearch(true)}\n        />\n      </Menu>\n    );\n  }\n\n  function openHotelBookingLink(hotel: HotelPrice) {\n    return () => {\n      if (hotel.bookingLink) {\n        openLink(hotel.bookingLink);\n      }\n    };\n  }\n\n  function openSearch(useCorporateRate: boolean) {\n    return () => {\n      openLink(\n        generateBookingLink(\n          props.selectedSquare.checkIn,\n          props.selectedSquare.checkOut,\n          useCorporateRate\n        )\n      );\n    };\n  }\n\n  function openLink(url: string) {\n    window.open(url, \"_blank\");\n  }\n};\n","import React from \"react\";\nimport { Text } from \"@blueprintjs/core\";\nimport classNames from \"classnames\";\nimport \"./CheckOutRow.scss\";\nimport { formatDate, dateToKey } from \"./utils\";\n\ninterface Props {\n  checkInDates: Date[];\n  checkOut?: Date;\n  activeCheckIn?: Date;\n  getPrice?: (checkOut: Date) => number | undefined;\n  shouldTint?: (checkIn: Date) => boolean;\n  onClick?: (checkIn: Date) => void;\n  getPricePercentile?: (checkIn: Date) => number | undefined;\n  onHover?: (checkIn: Date) => void;\n  offHover?: (checkIn: Date) => void;\n}\n\nexport const CheckOutRow: React.FC<Props> = (props: Props) => {\n  return (\n    <tr>\n      {props.checkInDates.map(checkIn => {\n        if (props.getPrice && props.checkOut) {\n          const price = props.getPrice && props.getPrice(checkIn);\n          return (\n            <td\n              key={dateToKey(checkIn)}\n              onClick={onClickCell(checkIn)}\n              onMouseEnter={() => props.onHover && props.onHover(checkIn)}\n              onMouseLeave={() => props.offHover && props.offHover(checkIn)}\n              className={classNames(\n                {\n                  clickable: price !== undefined,\n                  active: props.activeCheckIn === checkIn,\n                  tint: props.shouldTint && props.shouldTint(checkIn)\n                },\n                checkIn < props.checkOut ? getColorClass(checkIn) : \"impossible\"\n              )}\n            >\n              {price !== undefined && (\n                <Text className=\"price\" ellipsize>{`$${price}`}</Text>\n              )}\n            </td>\n          );\n        } else {\n          return (\n            <th\n              key={dateToKey(checkIn)}\n              className={classNames(\n                \"checkin-date\",\n                props.shouldTint && props.shouldTint(checkIn) && \"tint\"\n              )}\n            >\n              {renderDate(checkIn, true)}\n            </th>\n          );\n        }\n      })}\n      {props.checkOut && (\n        <th className=\"checkout-date\">{renderDate(props.checkOut, false)}</th>\n      )}\n    </tr>\n  );\n\n  function renderDate(dateObj: Date, multiline: boolean) {\n    const { dayOfWeek, date } = formatDate(dateObj);\n    if (multiline) {\n      return (\n        <p>\n          {dayOfWeek}\n          <br />\n          {date}\n        </p>\n      );\n    } else {\n      return (\n        <p>\n          {dayOfWeek}, {date}\n        </p>\n      );\n    }\n  }\n\n  function onClickCell(checkIn: Date) {\n    return () => props.onClick && props.onClick(checkIn);\n  }\n\n  function getColorClass(checkIn: Date) {\n    if (!props.getPricePercentile) {\n      return;\n    }\n    const percentile = props.getPricePercentile(checkIn);\n    if (percentile === undefined) {\n      return \"no-price\";\n    }\n    if (percentile >= 0.9) {\n      return \"cost-1\";\n    } else if (percentile > 0.7) {\n      return \"cost-2\";\n    } else if (percentile > 0.3) {\n      return \"cost-3\";\n    } else if (percentile > 0.1) {\n      return \"cost-4\";\n    } else {\n      return \"cost-5\";\n    }\n  }\n};\n","import React, { useState } from \"react\";\nimport {\n  Cell,\n  Column,\n  Table,\n  TableLoadingOption,\n  RenderMode,\n  RowHeaderCell\n} from \"@blueprintjs/table\";\nimport { PriceGridData, StayDates } from \"./types\";\nimport \"./PriceGrid.scss\";\nimport {\n  formatDate,\n  getPriceFromGrid,\n  datesToKey,\n  dateToKey,\n  datesAreChronological\n} from \"./utils\";\nimport { HTMLTable } from \"@blueprintjs/core\";\nimport { CheckOutRow } from \"./CheckOutRow\";\nimport { DateRange } from \"@blueprintjs/datetime\";\n\ninterface Props {\n  grid?: PriceGridData;\n  useBlueprintTable: boolean;\n  onSelectSquare: (square: StayDates) => void;\n  dateRange: DateRange;\n}\n\nconst TINT_AFTER_CLICKED = false;\n\nexport const PriceGrid: React.FC<Props> = (props: Props) => {\n  console.log(props.grid);\n  const [selectedSquare, setSelectedSquare] = useState<StayDates | undefined>(\n    undefined\n  );\n  const [hoveredSquare, setHoveredSquare] = useState<StayDates | undefined>(\n    undefined\n  );\n\n  if (props.useBlueprintTable) {\n    return (\n      <Table\n        defaultColumnWidth={85}\n        enableRowResizing={false}\n        enableColumnResizing={false}\n        enableMultipleSelection={false}\n        loadingOptions={\n          !props.grid\n            ? [\n                TableLoadingOption.CELLS,\n                TableLoadingOption.COLUMN_HEADERS,\n                TableLoadingOption.ROW_HEADERS\n              ]\n            : []\n        }\n        renderMode={RenderMode.BATCH}\n        rowHeaderCellRenderer={renderRowHeader}\n        numRows={props.grid ? props.grid.checkInDates.length : 25}\n        defaultRowHeight={25}\n      >\n        {renderColumns()}\n      </Table>\n    );\n  } else {\n    if (!props.grid) {\n      return null;\n    }\n    return (\n      <div className=\"grid\">\n        <div>\n          <p className=\"checkin dates-label\">Check in</p>\n          <HTMLTable bordered condensed className=\"table-header\">\n            <thead>\n              <CheckOutRow checkInDates={props.grid.checkInDates} />\n            </thead>\n          </HTMLTable>\n          <div className=\"table-container\">\n            <HTMLTable bordered condensed className=\"html-table\">\n              <tbody>{props.grid.checkOutDates.map(renderRow)}</tbody>\n            </HTMLTable>\n          </div>\n        </div>\n        <p className=\"dates-label checkout-text\">Check out</p>\n      </div>\n    );\n  }\n\n  function renderRow(checkOut: Date) {\n    if (!props.grid) {\n      return null;\n    }\n    return (\n      <CheckOutRow\n        key={dateToKey(checkOut)}\n        checkOut={checkOut}\n        checkInDates={props.grid.checkInDates}\n        getPrice={getPrice(checkOut)}\n        onClick={onSelectSquare(checkOut)}\n        activeCheckIn={getActiveCheckIn(checkOut)}\n        getPricePercentile={getPricePercentile(checkOut)}\n        shouldTint={shouldTintSquare(checkOut)}\n        onHover={onHoverSquare(checkOut)}\n        offHover={onUnhoverSquare()}\n      />\n    );\n  }\n\n  function renderRowHeader(rowIndex: number) {\n    if (props.grid) {\n      return (\n        <RowHeaderCell className=\"row-header\">\n          {formatDate(props.grid.checkInDates[rowIndex]).date}\n        </RowHeaderCell>\n      );\n    }\n    return <RowHeaderCell>{rowIndex}</RowHeaderCell>;\n  }\n\n  function renderColumns() {\n    if (!props.grid) {\n      return <Column />;\n    }\n    return props.grid.checkOutDates.map(checkOut => {\n      return (\n        <Column\n          key={dateToKey(checkOut)}\n          name={formatDate(checkOut).date}\n          cellRenderer={cellRenderer(checkOut)}\n        />\n      );\n    });\n  }\n\n  function cellRenderer(checkOut: Date) {\n    return (rowIndex: number) => {\n      let priceStr = \"\";\n      if (props.grid) {\n        const checkIn = props.grid.checkInDates[rowIndex];\n        const price = getPriceFromGrid(props.grid, { checkIn, checkOut });\n        if (price !== undefined) {\n          priceStr = `$${price.toLocaleString()}`;\n        }\n      }\n      return <Cell>{priceStr}</Cell>;\n    };\n  }\n\n  function getPrice(checkOut: Date) {\n    return (checkIn: Date) => {\n      return getPriceFromGrid(props.grid, { checkIn, checkOut });\n    };\n  }\n\n  function onSelectSquare(checkOut: Date) {\n    return (checkIn: Date) => {\n      if (getPriceFromGrid(props.grid, { checkIn, checkOut }) === undefined) {\n        return;\n      }\n      setSelectedSquare({ checkIn, checkOut });\n      props.onSelectSquare && props.onSelectSquare({ checkIn, checkOut });\n    };\n  }\n\n  function onHoverSquare(checkOut: Date) {\n    return (checkIn: Date) => setHoveredSquare({ checkIn, checkOut });\n  }\n\n  function onUnhoverSquare() {\n    return () => setHoveredSquare(undefined);\n  }\n\n  function stayOverlaps(selected: StayDates, overlapper: StayDates) {\n    if (selected.checkIn === overlapper.checkIn) {\n      return datesAreChronological(selected.checkOut, overlapper.checkOut);\n    }\n    if (selected.checkOut === overlapper.checkOut) {\n      return datesAreChronological(selected.checkIn, overlapper.checkIn);\n    }\n    return false;\n  }\n\n  function shouldTintSquare(checkOut: Date) {\n    return (checkIn: Date): boolean => {\n      const overlapsSelected =\n        selectedSquare && stayOverlaps(selectedSquare, { checkIn, checkOut });\n      const overlapsHovered =\n        hoveredSquare && stayOverlaps(hoveredSquare, { checkIn, checkOut });\n\n      return overlapsHovered || (TINT_AFTER_CLICKED && overlapsSelected);\n    };\n  }\n\n  function getActiveCheckIn(checkOut: Date) {\n    if (!TINT_AFTER_CLICKED) {\n      return;\n    }\n    if (!selectedSquare) {\n      return;\n    }\n    if (checkOut === selectedSquare.checkOut) {\n      return selectedSquare.checkIn;\n    }\n  }\n\n  function getPricePercentile(checkOut: Date) {\n    return (checkIn: Date): number | undefined => {\n      if (!props.grid) {\n        return;\n      }\n      const thisSquare = props.grid.map.get(datesToKey({ checkIn, checkOut }));\n      if (thisSquare !== undefined) {\n        return (thisSquare.rank - 1) / (props.grid.map.size - 1);\n      }\n    };\n  }\n};\n","import { List as ImmutableList } from \"immutable\";\nimport {\n  PriceGridData,\n  Hotel,\n  PricePoint,\n  PricePointWithPrice,\n  StayDates\n} from \"./types\";\n\nexport interface MatrixState {\n  pricePoints: {\n    byDates?: Map<string, PricePointWithPrice[]>;\n    byHotel: Map<string, PricePoint[]>;\n  };\n  grid?: PriceGridData;\n  hotels: ImmutableList<Hotel>;\n  selectedSquare?: StayDates;\n}\n\nexport interface LoadPricesAction {\n  type: \"LOAD_PRICES\";\n  grid: PriceGridData;\n  pricePointsByDates: Map<string, PricePointWithPrice[]>;\n}\n\nexport interface ToggleHotelSelection {\n  type: \"TOGGLE_HOTEL_SELECTION\";\n  hotel: Hotel;\n}\nexport interface SelectSquareAction {\n  type: \"SELECT_SQUARE\";\n  square: StayDates;\n}\n\nexport type Action =\n  | LoadPricesAction\n  | SelectSquareAction\n  | ToggleHotelSelection;\n\nexport function matrixReducer(state: MatrixState, action: Action): MatrixState {\n  switch (action.type) {\n    case \"LOAD_PRICES\":\n      return {\n        ...state,\n        grid: action.grid,\n        pricePoints: {\n          ...state.pricePoints,\n          byDates: action.pricePointsByDates\n        }\n      };\n    case \"SELECT_SQUARE\":\n      return {\n        ...state,\n        selectedSquare: action.square\n      };\n    case \"TOGGLE_HOTEL_SELECTION\":\n      return {\n        ...state,\n        hotels: state.hotels.map(hotel => ({\n          ...hotel,\n          selected:\n            hotel.name === action.hotel.name ? !hotel.selected : hotel.selected\n        }))\n      };\n  }\n}\n","import React, { useState } from \"react\";\nimport { NumberRange, RangeSlider, IRangeSliderProps } from \"@blueprintjs/core\";\nimport \"./Slider.scss\";\nimport classNames from \"classnames\";\n\ninterface Props extends IRangeSliderProps {\n  value: NumberRange;\n  labelPrefix?: string;\n  labelSuffix?: {\n    plural: string;\n    singular: string;\n  };\n}\n\nexport const Slider: React.FC<Props> = (props: Props) => {\n  const [localValue, setLocalValue] = useState<NumberRange>(props.value);\n  const {\n    className,\n    value,\n    labelPrefix,\n    labelSuffix,\n    ...spreadableProps\n  } = props;\n  return (\n    <div>\n      <RangeSlider\n        {...spreadableProps}\n        className={classNames(\"slider\", className)}\n        labelRenderer={label => (\n          <span className=\"no-wrap\">\n            {(labelPrefix || \"\") +\n              label.toLocaleString() +\n              (labelSuffix\n                ? label === 1\n                  ? labelSuffix.singular\n                  : labelSuffix.plural\n                : \"\")}\n          </span>\n        )}\n        value={localValue}\n        onChange={onChange}\n        onRelease={onRelease}\n      />\n    </div>\n  );\n\n  function onRelease(value: NumberRange) {\n    setLocalValue(value);\n    props.onRelease && props.onRelease(value);\n  }\n\n  function onChange(value: NumberRange) {\n    setLocalValue(value);\n    props.onChange && props.onChange(value);\n  }\n};\n","import React, { Fragment, useState } from \"react\";\nimport { Hotel, Bucket, ControlledBoundedRange, BoundedRange } from \"./types\";\nimport { Slider } from \"./Slider\";\nimport { Tooltip, Checkbox, Collapse, Icon, Intent } from \"@blueprintjs/core\";\nimport { DateRangeInput } from \"@blueprintjs/datetime\";\nimport {\n  hotelIsWithinDistance,\n  getBound,\n  getLabelStepSizeForLabelCount\n} from \"./utils\";\nimport { Set as ImmutableSet } from \"immutable\";\nimport \"./Filters.scss\";\nimport { IconNames } from \"@blueprintjs/icons\";\n\ninterface Props {\n  bucketedHotels: Bucket<Hotel>[];\n  onChangeHotelSelection: (hotel: Hotel) => void;\n\n  distanceRange: ControlledBoundedRange<number>;\n  stayLengthRange: ControlledBoundedRange<number>;\n  dateRange: BoundedRange<Date | undefined>;\n  priceRange: ControlledBoundedRange<number>;\n}\n\nexport const Filters: React.FC<Props> = (props: Props) => {\n  const [expandedBuckets, setExpandedBuckets] = useState<ImmutableSet<number>>(\n    ImmutableSet([props.bucketedHotels[0].ceiling])\n  );\n\n  return (\n    <div className=\"filters\">\n      <h3>Filters</h3>\n      <p>Distance from Georgetown</p>\n      <Slider\n        min={getBound(props.distanceRange, \"min\")}\n        max={getBound(props.distanceRange, \"max\")}\n        value={props.distanceRange.selection}\n        onRelease={props.distanceRange.onChange}\n        labelStepSize={getLabelStepSizeForLabelCount(\n          props.distanceRange.bounds,\n          6\n        )}\n        labelSuffix={{ plural: \"mi\", singular: \"mi\" }}\n      />\n      <p>Stay Length</p>\n      <Slider\n        value={props.stayLengthRange.selection}\n        min={getBound(props.stayLengthRange, \"min\")}\n        max={getBound(props.stayLengthRange, \"max\")}\n        stepSize={1}\n        labelStepSize={getLabelStepSizeForLabelCount(\n          props.stayLengthRange.bounds,\n          3\n        )}\n        labelSuffix={{ plural: \" days\", singular: \" day\" }}\n        onRelease={props.stayLengthRange.onChange}\n      />\n      <p>Price Per Night</p>\n      <Slider\n        value={props.priceRange.selection}\n        min={getBound(props.priceRange, \"min\")}\n        max={getBound(props.priceRange, \"max\")}\n        labelStepSize={getLabelStepSizeForLabelCount(\n          props.priceRange.bounds,\n          3\n        )}\n        stepSize={10}\n        labelPrefix=\"$\"\n        onRelease={props.priceRange.onChange}\n      />\n      <div className=\"date-range-container\">\n        <DateRangeInput\n          className=\"date-range\"\n          shortcuts={false}\n          formatDate={date => date.toDateString()}\n          parseDate={date => new Date(date)}\n          minDate={props.dateRange.bounds[0]}\n          maxDate={props.dateRange.bounds[1]}\n          onChange={props.dateRange.onChange}\n        />\n      </div>\n      <div className=\"hotels\">\n        {props.bucketedHotels.map(bucket => (\n          <Fragment key={`${bucket.ceiling}`}>\n            {renderTitle(bucket)}\n            <Collapse isOpen={expandedBuckets.has(getKeyFromBucket(bucket))}>\n              {bucket.items.map(hotel => {\n                const outOfRange = !hotelIsWithinDistance(\n                  hotel,\n                  props.distanceRange.selection\n                );\n                return (\n                  <div key={hotel.name}>\n                    <Tooltip\n                      content=\"Hotel is not in the selected distance range\"\n                      disabled={!outOfRange}\n                    >\n                      <Checkbox\n                        checked={hotel.selected && !outOfRange}\n                        disabled={outOfRange}\n                        onChange={() => props.onChangeHotelSelection(hotel)}\n                        key={hotel.name}\n                        labelElement={\n                          <span className=\"hotel-name\">\n                            {hotel.name}\n                            <span className=\"distance\">{hotel.distance}mi</span>\n                          </span>\n                        }\n                      />\n                    </Tooltip>\n                  </div>\n                );\n              })}\n            </Collapse>\n          </Fragment>\n        ))}\n      </div>\n    </div>\n  );\n\n  function renderTitle(bucket: Bucket<Hotel>) {\n    const expanded = expandedBuckets.has(getKeyFromBucket(bucket));\n    const anySelected = bucket.items.some(hotel => hotel.selected);\n    return (\n      <>\n        <h4 className=\"clickable\" onClick={toggleBucketExpansion(bucket)}>\n          <Icon\n            icon={expanded ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT}\n          />\n          {renderBucketTitle(bucket)}\n          {anySelected && (\n            <Icon\n              className=\"selected-icon\"\n              icon={IconNames.TICK}\n              intent={Intent.SUCCESS}\n            />\n          )}\n        </h4>\n      </>\n    );\n  }\n\n  function renderBucketTitle(bucket: Bucket<Hotel>) {\n    const suffix = \"miles\";\n    if (bucket.ceiling === Infinity) {\n      return `${bucket.floor}+ ${suffix}`;\n    }\n    return `${bucket.floor} – ${bucket.ceiling} ${suffix}`;\n  }\n\n  function toggleBucketExpansion(bucket: Bucket<Hotel>) {\n    const key = getKeyFromBucket(bucket);\n    return () => {\n      setExpandedBuckets(\n        expandedBuckets.has(key)\n          ? expandedBuckets.remove(key)\n          : expandedBuckets.add(key)\n      );\n    };\n  }\n\n  function getKeyFromBucket(bucket: Bucket<Hotel>) {\n    return bucket.ceiling;\n  }\n};\n","import { Classes } from \"@blueprintjs/core\";\nimport { List as ImmutableList } from \"immutable\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState\n} from \"react\";\nimport { AvailableRooms } from \"./AvailableRooms\";\nimport { PriceGrid } from \"./PriceGrid\";\nimport \"./MarriottMatrix.scss\";\nimport { matrixReducer, MatrixState } from \"./matrixReducer\";\nimport {\n  Bucket,\n  Hotel,\n  PriceGridMap,\n  PricePoint,\n  PricePointWithPrice,\n  StayDates\n} from \"./types\";\nimport {\n  datesToKey,\n  DEFAULT_HOTELS,\n  getLast,\n  hotelIsWithinDistance,\n  dateIsInRange,\n  PricePointMap,\n  pricePointIsWithinStayLengthRange,\n  getBucketCeiling,\n  pricePointIsWithinPriceRange,\n  useBounds,\n  getAllDatesInRange\n} from \"./utils\";\nimport { Filters } from \"./Filters\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\n\ninterface Props {\n  pricePoints: PricePoint[];\n}\n\nfunction createInitialState(props: Props): MatrixState {\n  const hotelToPricePoints = new PricePointMap();\n  const selectedHotelNames = new Set<string>();\n  const hotels: Hotel[] = [];\n  props.pricePoints.forEach(pricePoint => {\n    const name = pricePoint.hotelName;\n\n    hotelToPricePoints.addPricePoint(name, pricePoint);\n\n    if (!selectedHotelNames.has(name)) {\n      selectedHotelNames.add(name);\n      hotels.push({\n        name: name,\n        distance: pricePoint.distance,\n        selected: DEFAULT_HOTELS.includes(name)\n      });\n    }\n  });\n\n  hotels.sort((a, b) => a.distance - b.distance);\n\n  return {\n    pricePoints: {\n      byHotel: hotelToPricePoints\n    },\n    hotels: ImmutableList(hotels)\n  };\n}\n\nexport const MarriottMatrix: React.FC<Props> = (props: Props) => {\n  const [viewingAvailableRooms, setViewingAvailableRooms] = useState(false);\n\n  const [state, dispatch] = useReducer(\n    matrixReducer,\n    createInitialState(props)\n  );\n\n  const [dateBounds, priceBounds, stayLengthBounds, distanceBounds] = useBounds(\n    props.pricePoints\n  );\n\n  const [bucketedHotels, nameToHotel, anyHotelsSelected] = useMemo(() => {\n    const hotels = state.hotels;\n    const buckets: Bucket<Hotel>[] = [];\n    const nameToHotel = new Map<string, Hotel>();\n    let anyHotelsSelected = false;\n\n    hotels.forEach(hotel => {\n      nameToHotel.set(hotel.name, hotel);\n      anyHotelsSelected =\n        anyHotelsSelected ||\n        (hotel.selected &&\n          hotelIsWithinDistance(hotel, distanceBounds.selection));\n      if (\n        buckets.length === 0 ||\n        hotel.distance > buckets[buckets.length - 1].ceiling\n      ) {\n        buckets.push({\n          floor: buckets.length === 0 ? 0 : buckets[buckets.length - 1].ceiling,\n          ceiling: getBucketCeiling(hotel.distance),\n          items: [hotel]\n        });\n      } else {\n        getLast(buckets).items.push(hotel);\n      }\n    });\n\n    return [buckets, nameToHotel, anyHotelsSelected];\n  }, [state.hotels, distanceBounds.selection]);\n\n  const onSelectSquare = useCallback(\n    (square: StayDates) => {\n      setViewingAvailableRooms(true);\n      dispatch({\n        type: \"SELECT_SQUARE\",\n        square\n      });\n    },\n    [setViewingAvailableRooms, dispatch]\n  );\n\n  useEffect(() => {\n    const datesToPricePoints = new PricePointMap<PricePointWithPrice>();\n    const priceGridMap = new Map<string, PricePointWithPrice>();\n\n    const dateFormat = \"YYYY-MM-DD\";\n    const checkInDates = new Set<string>();\n    const checkOutDates = new Set<string>();\n\n    function maybeAddPricePointToGrid(pricePoint: PricePoint) {\n      const {\n        hotelName,\n        pricePerNight,\n        soldOut,\n        stayDates: { checkIn, checkOut }\n      } = pricePoint;\n\n      checkInDates.add(moment(checkIn).format(dateFormat));\n      checkOutDates.add(moment(checkOut).format(dateFormat));\n\n      for (const date of [checkIn, checkOut]) {\n        if (!dateIsInRange(date, dateBounds.selection)) {\n          return;\n        }\n      }\n\n      if (pricePerNight === null || pricePerNight === undefined || soldOut) {\n        return;\n      }\n\n      const hotel = nameToHotel.get(hotelName);\n      if (\n        !hotel ||\n        (anyHotelsSelected && !hotel.selected) ||\n        !hotelIsWithinDistance(hotel, distanceBounds.selection) ||\n        !pricePointIsWithinStayLengthRange(\n          pricePoint.stayDates,\n          stayLengthBounds.selection\n        ) ||\n        !pricePointIsWithinPriceRange(pricePerNight, priceBounds.selection)\n      ) {\n        return;\n      }\n\n      const pricePointWithPrice = {\n        ...pricePoint,\n        pricePerNight\n      };\n      const datesString = datesToKey({ checkIn, checkOut });\n      const bestPriceForStay = priceGridMap.get(datesString);\n      if (!bestPriceForStay || pricePerNight < bestPriceForStay.pricePerNight) {\n        priceGridMap.set(datesString, pricePointWithPrice);\n      }\n      datesToPricePoints.addPricePoint(datesString, pricePointWithPrice);\n    }\n\n    if (anyHotelsSelected) {\n      for (const [\n        hotelName,\n        pricePoints\n      ] of state.pricePoints.byHotel.entries()) {\n        const hotelForPricePoint = nameToHotel.get(hotelName);\n        if (\n          hotelForPricePoint &&\n          hotelForPricePoint.selected &&\n          hotelIsWithinDistance(hotelForPricePoint, distanceBounds.selection)\n        ) {\n          pricePoints.forEach(pricePoint => {\n            if (\n              pricePointIsWithinStayLengthRange(\n                pricePoint.stayDates,\n                stayLengthBounds.selection\n              )\n            ) {\n              maybeAddPricePointToGrid(pricePoint);\n            }\n          });\n        }\n      }\n    } else {\n      props.pricePoints.forEach(maybeAddPricePointToGrid);\n    }\n\n    // add ranks\n    const sortedPrices = [...priceGridMap.entries()].sort(\n      ([_, a], [__, b]) => a.pricePerNight - b.pricePerNight\n    );\n    const mapWithRanks: PriceGridMap = new Map();\n    sortedPrices.forEach(([dateString, _], i) => {\n      const pricePoint = priceGridMap.get(dateString);\n      if (pricePoint) {\n        mapWithRanks.set(dateString, {\n          ...pricePoint,\n          rank: i + 1\n        });\n      }\n    });\n\n    dispatch({\n      type: \"LOAD_PRICES\",\n      pricePointsByDates: datesToPricePoints,\n      grid: {\n        map: mapWithRanks,\n        checkInDates: getAllDatesInRange([...checkInDates], dateFormat),\n        checkOutDates: getAllDatesInRange([...checkOutDates], dateFormat)\n      }\n    });\n  }, [\n    props.pricePoints,\n    state.hotels,\n    dateBounds.selection,\n    distanceBounds.selection,\n    stayLengthBounds.selection,\n    priceBounds.selection,\n    anyHotelsSelected,\n    nameToHotel,\n    state.pricePoints.byHotel\n  ]);\n\n  return (\n    <div className={classNames(\"container\", Classes.DARK)}>\n      <div className=\"sidebar\">{renderFilters()}</div>\n      <div className=\"content\">\n        <h2>Marriott Matrix</h2>\n        {renderTable()}\n        {state.selectedSquare && (\n          <AvailableRooms\n            selectedSquare={state.selectedSquare}\n            pricePoints={getPricePointsForStay(state.selectedSquare)}\n            visible={viewingAvailableRooms}\n            onClose={() => setViewingAvailableRooms(false)}\n          />\n        )}\n      </div>\n    </div>\n  );\n\n  function renderTable() {\n    if (!state.grid) {\n      return null;\n    }\n    return (\n      <PriceGrid\n        grid={state.grid}\n        dateRange={dateBounds.selection}\n        useBlueprintTable={false}\n        onSelectSquare={onSelectSquare}\n      />\n    );\n  }\n\n  function renderFilters() {\n    if (!state.grid) {\n      return null;\n    }\n    return (\n      <Filters\n        dateRange={{\n          bounds: dateBounds.bounds,\n          onChange: dateBounds.onChange\n        }}\n        distanceRange={distanceBounds}\n        stayLengthRange={stayLengthBounds}\n        priceRange={priceBounds}\n        bucketedHotels={bucketedHotels}\n        onChangeHotelSelection={hotel => {\n          dispatch({\n            type: \"TOGGLE_HOTEL_SELECTION\",\n            hotel\n          });\n        }}\n      />\n    );\n  }\n\n  function getPricePointsForStay(\n    stay?: StayDates\n  ): PricePointWithPrice[] | undefined {\n    if (!state.grid || !stay || !state.pricePoints.byDates) {\n      return [];\n    }\n    return state.pricePoints.byDates.get(datesToKey(stay));\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { MarriottMatrix } from \"./MarriottMatrix\";\nimport prices from \"./prices.json\";\nimport { ScrapedPricePoint, PricePoint } from \"./types\";\nimport { generateBookingLink } from \"./utils\";\nimport moment from \"moment\";\n\nfunction useWindowWidth() {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n\n  return width;\n}\n\nfunction processScrapedPricePoint(pricePoint: ScrapedPricePoint): PricePoint {\n  const {\n    corporate_rate,\n    name,\n    price_per_night,\n    sold_out,\n    distance,\n    dates\n  } = pricePoint;\n\n  const [checkIn, checkOut] = dates.map(d => moment(d, \"YYYY-MM-DD\").toDate());\n\n  // TODO: url generation should be on backend\n  let bookingLink: string | undefined = undefined;\n  if (pricePoint.booking_link) {\n    const propertyCodeMatch = pricePoint.booking_link.match(\n      /propertyCode=([A-Z]+)&/\n    );\n    if (propertyCodeMatch === null) {\n      throw Error(\n        \"No property code match in booking link: \" + pricePoint.booking_link\n      );\n    }\n    const propertyCode = propertyCodeMatch[1];\n    bookingLink = generateBookingLink(\n      checkIn,\n      checkOut,\n      corporate_rate,\n      propertyCode\n    );\n  }\n\n  return {\n    hotelName: name,\n    stayDates: { checkIn, checkOut },\n    corporateRate: corporate_rate,\n    pricePerNight: price_per_night,\n    soldOut: sold_out,\n    distance: distance,\n    bookingLink\n  };\n}\n\nconst App: React.FC = () => {\n  const width = useWindowWidth();\n  if (width < 750) {\n    return <p className=\"too-small\">Desktop only :-)</p>;\n  }\n  return <MarriottMatrix pricePoints={prices.map(processScrapedPricePoint)} />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}