{"version":3,"sources":["types.ts","utils.tsx","AvailableRooms.tsx","CheckOutRow.tsx","PriceGrid.tsx","matrixReducer.ts","Slider.tsx","Filters.tsx","MarriottMatrix.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["isPresent","value","undefined","PricePointBounds","bounds","getMinCandidate","getMaxCandidate","Object","classCallCheck","this","createClass","key","pricePoint","minCandidate","maxCandidate","_this$bounds","slicedToArray","min","max","DEFAULT_HOTELS","formatDate","date","dayOfWeek","moment","format","datesToKey","stay","concat","checkIn","checkOut","getStayLength","diff","pricePointIsWithinStayLengthRange","stayLengthRange","length","hotelIsWithinDistance","hotel","distanceRange","distance","datesAreChronological","first","second","dateIsInRange","dateStr","range","stringToDate","getPriceFromGrid","grid","map","get","pricePerNight","PricePointMap","_Map","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","prototype","call","list","Error","push","wrapNativeSuper","Map","toDate","getBound","bound","defaultValue","setBound","round","roundToNearest","Math","getLabelStepSizeForLabelCount","labelCount","stepSize","generateBookingLink","useCorporateCode","propertyCode","url","URL","params","URLSearchParams","append","toString","AvailableRooms","props","hotels","useMemo","byName","pricePoints","forEach","currentBest","hotelName","cheapestRate","set","corporateRate","bookingLink","Array","from","values","sort","a","b","react_default","createElement","dialog","className","classNames","Classes","DARK","isOpen","visible","title","onClose","selectedSquare","dates","d","renderTitle","popover","content","menu","menuItem","text","onClick","openSearch","position","Position","BOTTOM","buttons","rightIcon","IconNames","CARET_DOWN","htmlTable","striped","interactive","openHotelBookingLink","price","openLink","useCorporateRate","window","open","CheckOutRow","checkInDates","getPrice","onClickCell","onMouseEnter","onHover","onMouseLeave","offHover","clickable","active","activeCheckIn","tint","shouldTint","getColorClass","text_text","ellipsize","renderDate","multiline","_formatDate","Fragment","getPricePercentile","percentile","TINT_AFTER_CLICKED","PriceGrid","_useState","useState","_useState2","setSelectedSquare","_useState3","_useState4","hoveredSquare","setHoveredSquare","useBlueprintTable","table","defaultColumnWidth","enableRowResizing","enableColumnResizing","enableMultipleSelection","loadingOptions","TableLoadingOption","CELLS","COLUMN_HEADERS","ROW_HEADERS","renderMode","RenderMode","BATCH","rowHeaderCellRenderer","rowIndex","rowHeaderCell","numRows","defaultRowHeight","column","checkOutDates","name","cellRenderer","renderColumns","bordered","condensed","CheckOutRow_CheckOutRow","onSelectSquare","getActiveCheckIn","shouldTintSquare","onHoverSquare","priceStr","toLocaleString","cell","stayOverlaps","selected","overlapper","overlapsSelected","thisSquare","rank","size","matrixReducer","state","action","type","objectSpread","byDates","pricePointsByDates","square","Slider","localValue","setLocalValue","labelPrefix","labelSuffix","spreadableProps","objectWithoutProperties","rangeSlider","assign","labelRenderer","label","singular","plural","onChange","onRelease","Filters","ImmutableSet","bucketedHotels","ceiling","expandedBuckets","setExpandedBuckets","Slider_Slider","selection","labelStepSize","priceRange","dateRangeInput","shortcuts","toDateString","parseDate","minDate","dateRange","maxDate","bucket","react","expanded","has","getKeyFromBucket","toggleBucketExpansion","icon","CARET_RIGHT","Infinity","floor","renderBucketTitle","items","some","TICK","intent","Intent","SUCCESS","collapse","outOfRange","tooltip","disabled","controls","checked","onChangeHotelSelection","labelElement","remove","add","sortDates","MarriottMatrix","viewingAvailableRooms","setViewingAvailableRooms","_useReducer","useReducer","hotelToPricePoints","selectedHotelNames","Set","addPricePoint","includes","byHotel","ImmutableList","createInitialState","_useReducer2","dispatch","_useBounds","PricePointBound","p","stayDates","updateBounds","useRangeState","useBounds","_useBounds2","dateBounds","priceBounds","stayLengthBounds","distanceBounds","_useMemo","buckets","nameToHotel","anyHotelsSelected","array","_useMemo2","useCallback","useEffect","datesToPricePoints","priceGridMap","maybeAddPricePointToGrid","soldOut","_pricePoint$stayDates","_i","_arr","pricePointWithPrice","datesString","bestPriceForStay","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","_ref2","hotelForPricePoint","err","return","sortedPrices","toConsumableArray","_ref4","_ref5","_ref6","_ref7","mapWithRanks","_ref8","i","_ref9","dateString","Filters_Filters","renderFilters","PriceGrid_PriceGrid","renderTable","AvailableRooms_AvailableRooms","getPricePointsForStay","processScrapedPricePoint","corporate_rate","price_per_night","sold_out","_pricePoint$dates","booking_link","propertyCodeMatch","match","App","innerWidth","width","setWidth","handleResize","addEventListener","removeEventListener","useWindowWidth","MarriottMatrix_MarriottMatrix","prices","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6879f866.chunk.js","sourcesContent":["export type Nullable<T> = T | null | undefined;\n\nexport function isPresent<T>(value: Nullable<T>): value is T {\n  return value !== null && value !== undefined;\n}\n\nexport interface ScrapedPricePoint {\n  name: string;\n  dates: string[];\n  corporate_rate: boolean;\n  price_per_night: number | undefined;\n  sold_out: boolean;\n  distance: number;\n  booking_link: string;\n}\n\nexport interface StayDates {\n  checkIn: string;\n  checkOut: string;\n}\n\nexport interface PricePoint {\n  hotelName: string;\n  stayDates: StayDates;\n  corporateRate: boolean;\n  pricePerNight?: number | null;\n  soldOut: boolean;\n  distance: number;\n  bookingLink?: string;\n}\n\nexport interface PricePointWithPrice extends PricePoint {\n  pricePerNight: number;\n}\n\nexport interface RankedPricePrice extends PricePointWithPrice {\n  rank: number;\n}\n\nexport type PriceGridMap = Map<string, RankedPricePrice>;\n\nexport interface Hotel {\n  name: string;\n  distance: number;\n  selected: boolean;\n}\n\nexport interface PriceGridData {\n  map: PriceGridMap;\n  checkInDates: string[];\n  checkOutDates: string[];\n}\n\nexport interface Bucket<T> {\n  floor: number;\n  ceiling: number;\n  items: T[];\n}\n\nexport interface BoundedRange<T> {\n  bounds: [T, T];\n  onChange: (newRange: [T, T]) => void;\n}\nexport interface ControlledBoundedRange<T> extends BoundedRange<T> {\n  selection: [T, T];\n}\n\ntype PricePointParser<T> = (pricePoint: PricePoint) => Nullable<T>;\n\nexport class PricePointBounds<T> {\n  constructor(\n    public bounds: [T, T],\n    private readonly getMinCandidate: PricePointParser<T>,\n    private readonly getMaxCandidate?: PricePointParser<T>\n  ) {}\n\n  public updateBounds(pricePoint: PricePoint) {\n    const minCandidate = this.getMinCandidate(pricePoint);\n    const maxCandidate = (this.getMaxCandidate || this.getMinCandidate)(\n      pricePoint\n    );\n    let [min, max] = this.bounds;\n    if (isPresent(minCandidate) && minCandidate < min) {\n      min = minCandidate;\n    }\n    if (isPresent(maxCandidate) && maxCandidate > max) {\n      max = maxCandidate;\n    }\n    this.bounds = [min, max];\n  }\n}\n","import moment from \"moment\";\nimport {\n  PricePoint,\n  Hotel,\n  PriceGridData,\n  StayDates,\n  BoundedRange,\n  PricePointBounds as PricePointBound\n} from \"./types\";\nimport { NumberRange } from \"@blueprintjs/core\";\nimport { DateRange } from \"@blueprintjs/datetime\";\nimport { useMemo, useState } from \"react\";\n\nexport const DEFAULT_HOTELS: string[] = [\n  \"The Ritz-Carlton Georgetown, Washington, D.C.\",\n  \"The Westin Georgetown, Washington D.C.\",\n  \"Washington Marriott Georgetown\",\n  \"The Ritz-Carlton, Washington, DC\",\n  \"The Mayflower Hotel, Autograph Collection\",\n  \"The Westin Georgetown, Washington D.C.\"\n];\n\nexport const DEFAULT_MIN_DISTANCE = 0;\nexport const DEFAULT_MIN_STAY_LENGTH = 1;\nexport const DEFAULT_MIN_PRICE = 0;\n\nexport function formatDate(date: string) {\n  return {\n    dayOfWeek: moment(date).format(\"ddd\"),\n    date: moment(date).format(\"M/D\")\n  };\n}\n\nexport function datesToKey(stay: StayDates): string {\n  return `${stay.checkIn}-${stay.checkOut}`;\n}\n\nexport function getLast<T>(array: T[]): T {\n  return array[array.length - 1];\n}\n\nexport function getStayLength(stay: StayDates): number {\n  return moment(stay.checkOut).diff(moment(stay.checkIn), \"days\");\n}\n\nexport function pricePointIsWithinStayLengthRange(\n  stay: StayDates,\n  stayLengthRange: NumberRange\n) {\n  const length = getStayLength(stay);\n  return length >= stayLengthRange[0] && length <= stayLengthRange[1];\n}\n\nexport function hotelIsWithinDistance(\n  hotel: Hotel,\n  distanceRange: NumberRange\n) {\n  return (\n    hotel.distance >= distanceRange[0] && hotel.distance <= distanceRange[1]\n  );\n}\n\nexport function pricePointIsWithinPriceRange(\n  price: number,\n  range: NumberRange\n) {\n  return price >= range[0] && price <= range[1];\n}\n\nexport function datesAreChronological(first?: Date, second?: Date): boolean {\n  if (!first || !second) {\n    return true;\n  }\n  return moment(second).diff(moment(first)) >= 0;\n}\n\nexport function dateIsInRange(dateStr: string, range: DateRange) {\n  const date = stringToDate(dateStr);\n  return (\n    datesAreChronological(range[0], date) &&\n    datesAreChronological(date, range[1])\n  );\n}\n\nexport function getPriceFromGrid(\n  grid: PriceGridData | undefined,\n  stay: StayDates\n) {\n  if (grid) {\n    const key = datesToKey(stay);\n    const pricePoint = grid.map.get(key);\n    return pricePoint && pricePoint.pricePerNight;\n  }\n}\n\nexport class PricePointMap<V extends PricePoint> extends Map<string, V[]> {\n  public addPricePoint(key: string, pricePoint: V) {\n    if (this.get(key) === undefined) {\n      super.set(key, []);\n    }\n    const list = super.get(key);\n    if (list === undefined) {\n      throw Error(`No list for key: ${key} in PricePointMap`);\n    }\n    list.push(pricePoint);\n    return this;\n  }\n\n  public set(): this {\n    throw Error(\n      \"Calling set() in a PricePointMap is disallowed. Use addPricePoint instead.\"\n    );\n  }\n}\n\nexport function stringToDate(date: string) {\n  return moment(date).toDate();\n}\n\nexport function getBucketCeiling(value: number) {\n  if (value <= 1) {\n    return 1;\n  } else if (value <= 2) {\n    return 2;\n  } else if (value <= 5) {\n    return 5;\n  } else if (value <= 10) {\n    return 10;\n  } else {\n    return Infinity;\n  }\n}\n\nexport function getBound<T>(\n  range: BoundedRange<T>,\n  bound: \"max\" | \"min\",\n  defaultValue?: T\n) {\n  const setBound = range.bounds[bound === \"min\" ? 0 : 1];\n  return setBound !== undefined ? setBound : defaultValue;\n}\n\nexport function round(value: number, roundToNearest: number) {\n  return Math.round(value / roundToNearest) * roundToNearest;\n}\n\nexport function getLabelStepSizeForLabelCount(\n  range: NumberRange,\n  labelCount: number\n) {\n  const stepSize = (range[1] - range[0]) / labelCount;\n  if (stepSize < 10) {\n    return round(stepSize, 1);\n  } else if (stepSize < 100) {\n    return round(stepSize, 10);\n  } else if (stepSize < 1000) {\n    return round(stepSize, 100);\n  } else {\n    return round(stepSize, 1000);\n  }\n}\n\nexport function generateBookingLink(\n  checkIn: string,\n  checkOut: string,\n  useCorporateCode: boolean,\n  propertyCode?: string\n) {\n  const url = new URL(\n    propertyCode\n      ? \"/reservation/availabilitySearch.mi\"\n      : \"/search/submitSearch.mi\",\n    \"https://www.marriott.com\"\n  );\n\n  const params = new URLSearchParams();\n  params.append(\"fromDate\", moment(checkIn).format(\"MM/DD/YYYY\"));\n  params.append(\"toDate\", moment(checkOut).format(\"MM/DD/YYYY\"));\n  params.append(\"numberOfRooms\", \"1\");\n  params.append(\"numberOfGuests\", \"1\");\n  params.append(\"currency\", \"USD\");\n\n  if (propertyCode) {\n    params.append(\"propertyCode\", propertyCode);\n  } else {\n    params.append(\n      \"destinationAddress.destination\",\n      \"Georgetown,+Washington,+DC,+USA\"\n    );\n  }\n\n  if (useCorporateCode) {\n    params.append(\"clusterCode\", \"corp\");\n    params.append(\"corporateCode\", \"P5R\");\n  }\n\n  return `${url.toString()}?${params.toString()}`;\n}\n\ntype AllBounds = [\n  PricePointBound<Date | undefined>,\n  PricePointBound<number>,\n  PricePointBound<number>,\n  PricePointBound<number>\n];\n\ninterface BoundWithState<T> {\n  bounds: [T, T];\n  selection: [T, T];\n  onChange: React.Dispatch<React.SetStateAction<[T, T]>>;\n}\ntype AllBoundsWithState = [\n  BoundWithState<Date | undefined>,\n  BoundWithState<number>,\n  BoundWithState<number>,\n  BoundWithState<number>\n];\nexport function useBounds(pricePoints: PricePoint[]): AllBoundsWithState {\n  const bounds: AllBounds = useMemo(() => {\n    const dateBound = new PricePointBound<Date | undefined>(\n      [\n        moment(\"2020-01-01\", \"YYYY-MM-DD\").toDate(),\n        moment(\"2000-01-01\", \"YYYY-MM-DD\").toDate()\n      ],\n      p => moment(p.stayDates.checkIn).toDate(),\n      p => moment(p.stayDates.checkOut).toDate()\n    );\n\n    const priceBound = new PricePointBound<number>(\n      [Infinity, -1],\n      p => p.pricePerNight\n    );\n\n    const stayLengthBound = new PricePointBound<number>([Infinity, -1], p =>\n      getStayLength(p.stayDates)\n    );\n\n    const distanceBound = new PricePointBound<number>(\n      [Infinity, -1],\n      p => p.distance\n    );\n\n    const bounds: AllBounds = [\n      dateBound,\n      priceBound,\n      stayLengthBound,\n      distanceBound\n    ];\n\n    pricePoints.forEach(pricePoint => {\n      bounds.forEach(bound => {\n        bound.updateBounds(pricePoint);\n      });\n    });\n\n    return bounds;\n  }, [pricePoints]);\n\n  function useRangeState<T>(bound: PricePointBound<T>): BoundWithState<T> {\n    const [selection, onChange] = useState<[T, T]>(bound.bounds);\n    return {\n      bounds: bound.bounds,\n      selection,\n      onChange\n    };\n  }\n\n  return [\n    useRangeState(bounds[0]),\n    useRangeState(bounds[1]),\n    useRangeState(bounds[2]),\n    useRangeState(bounds[3])\n  ];\n}\n","import React, { useMemo } from \"react\";\nimport { PricePointWithPrice, StayDates } from \"./types\";\nimport \"./AvailableRooms.scss\";\nimport {\n  HTMLTable,\n  Dialog,\n  Classes,\n  Popover,\n  Button,\n  Menu,\n  MenuItem,\n  Position\n} from \"@blueprintjs/core\";\nimport moment from \"moment\";\nimport classNames from \"classnames\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport { generateBookingLink } from \"./utils\";\n\ninterface Props {\n  visible: boolean;\n  pricePoints?: PricePointWithPrice[];\n  selectedSquare: StayDates;\n  onClose: () => void;\n}\n\ninterface HotelPrice {\n  hotelName: string;\n  cheapestRate?: number;\n  corporateRate: boolean;\n  bookingLink?: string;\n}\n\nfunction getRate(price: HotelPrice) {\n  if (price.cheapestRate === null) {\n    return \"No Rate Available\";\n  }\n  return `$${price.cheapestRate} (${\n    price.corporateRate ? \"Corporate Rate\" : \"Regular Rate\"\n  })`;\n}\n\nexport const AvailableRooms: React.FC<Props> = (props: Props) => {\n  const hotels = useMemo(() => {\n    const byName = new Map<string, HotelPrice>();\n    if (props.pricePoints) {\n      props.pricePoints.forEach(pricePoint => {\n        const currentBest = byName.get(pricePoint.hotelName);\n        if (\n          currentBest === undefined ||\n          currentBest.cheapestRate === undefined ||\n          (pricePoint.pricePerNight !== undefined &&\n            pricePoint.pricePerNight < currentBest.cheapestRate)\n        ) {\n          byName.set(pricePoint.hotelName, {\n            hotelName: pricePoint.hotelName,\n            cheapestRate: pricePoint.pricePerNight,\n            corporateRate: pricePoint.corporateRate,\n            bookingLink: pricePoint.bookingLink\n          });\n        }\n      });\n    }\n    return Array.from(byName.values()).sort((a, b) => {\n      if (a.cheapestRate === null || a.cheapestRate === undefined) {\n        return 1;\n      } else if (b.cheapestRate === null || b.cheapestRate === undefined) {\n        return -1;\n      }\n      return a.cheapestRate - b.cheapestRate;\n    });\n  }, [props]);\n\n  return (\n    <Dialog\n      className={classNames(\"available-rooms\", Classes.DARK)}\n      isOpen={props.visible}\n      title={\"Available Rooms\"}\n      onClose={props.onClose}\n    >\n      {renderTitle()}\n      <Popover content={renderBookMenu()} position={Position.BOTTOM}>\n        <Button\n          text={\"View all options on Marriott.com\"}\n          rightIcon={IconNames.CARET_DOWN}\n        />\n      </Popover>\n      <div className=\"table-container\">\n        <HTMLTable className=\"table\" striped interactive>\n          <tbody>\n            {hotels.map(hotel => (\n              <tr key={hotel.hotelName} onClick={openHotelBookingLink(hotel)}>\n                <td>{hotel.hotelName}</td>\n                <td>{getRate(hotel)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </HTMLTable>\n      </div>\n    </Dialog>\n  );\n\n  function renderTitle() {\n    if (!props.selectedSquare) {\n      return null;\n    }\n    const dates = [\n      props.selectedSquare.checkIn,\n      props.selectedSquare.checkOut\n    ].map(d => moment(d).format(\"dddd, MMMM D, YYYY\"));\n\n    return (\n      <h3>\n        {dates[0]}\n        <span className=\"space\" />\n        —\n        <span className=\"space\" />\n        {dates[1]}\n      </h3>\n    );\n  }\n\n  function renderBookMenu() {\n    return (\n      <Menu>\n        <MenuItem text=\"Regular Rate\" onClick={openSearch(false)} />\n        <MenuItem text=\"Corporate Rate\" onClick={openSearch(true)} />\n      </Menu>\n    );\n  }\n\n  function openHotelBookingLink(hotel: HotelPrice) {\n    return () => {\n      if (hotel.bookingLink) {\n        openLink(hotel.bookingLink);\n      }\n    };\n  }\n\n  function openSearch(useCorporateRate: boolean) {\n    return () => {\n      openLink(\n        generateBookingLink(\n          props.selectedSquare.checkIn,\n          props.selectedSquare.checkOut,\n          useCorporateRate\n        )\n      );\n    };\n  }\n\n  function openLink(url: string) {\n    window.open(url, \"_blank\");\n  }\n};\n","import React from \"react\";\nimport { Text } from \"@blueprintjs/core\";\nimport classNames from \"classnames\";\nimport \"./CheckOutRow.scss\";\nimport { formatDate } from \"./utils\";\n\ninterface Props {\n  checkInDates: string[];\n  checkOut?: string;\n  activeCheckIn?: string;\n  getPrice?: (checkOut: string) => number | undefined;\n  shouldTint?: (checkIn: string) => boolean;\n  onClick?: (checkIn: string) => void;\n  getPricePercentile?: (checkIn: string) => number | undefined;\n  onHover?: (checkIn: string) => void;\n  offHover?: (checkIn: string) => void;\n}\n\nexport const CheckOutRow: React.FC<Props> = (props: Props) => {\n  return (\n    <tr>\n      {props.checkInDates.map(checkIn => {\n        if (props.getPrice && props.checkOut) {\n          const price = props.getPrice && props.getPrice(checkIn);\n          return (\n            <td\n              key={checkIn}\n              onClick={onClickCell(checkIn)}\n              onMouseEnter={() => props.onHover && props.onHover(checkIn)}\n              onMouseLeave={() => props.offHover && props.offHover(checkIn)}\n              className={classNames(\n                {\n                  clickable: price !== undefined,\n                  active: props.activeCheckIn === checkIn,\n                  tint: props.shouldTint && props.shouldTint(checkIn)\n                },\n                checkIn < props.checkOut ? getColorClass(checkIn) : \"impossible\"\n              )}\n            >\n              {price !== undefined && (\n                <Text className=\"price\" ellipsize>{`$${price}`}</Text>\n              )}\n            </td>\n          );\n        } else {\n          return (\n            <th\n              key={checkIn}\n              className={classNames(\n                \"checkin-date\",\n                props.shouldTint && props.shouldTint(checkIn) && \"tint\"\n              )}\n            >\n              {renderDate(checkIn, true)}\n            </th>\n          );\n        }\n      })}\n      {props.checkOut && (\n        <th className=\"checkout-date\">{renderDate(props.checkOut, false)}</th>\n      )}\n    </tr>\n  );\n\n  function renderDate(dateStr: string, multiline: boolean) {\n    const { dayOfWeek, date } = formatDate(dateStr);\n    if (multiline) {\n      return (\n        <>\n          <p>{dayOfWeek}</p>\n          <p>{date}</p>\n        </>\n      );\n    } else {\n      return (\n        <p>\n          {dayOfWeek}, {date}\n        </p>\n      );\n    }\n  }\n\n  function onClickCell(checkIn: string) {\n    return () => props.onClick && props.onClick(checkIn);\n  }\n\n  function getColorClass(checkIn: string) {\n    if (!props.getPricePercentile) {\n      return;\n    }\n    const percentile = props.getPricePercentile(checkIn);\n    if (percentile === undefined) {\n      return \"no-price\";\n    }\n    if (percentile >= 0.9) {\n      return \"cost-1\";\n    } else if (percentile > 0.7) {\n      return \"cost-2\";\n    } else if (percentile > 0.3) {\n      return \"cost-3\";\n    } else if (percentile > 0.1) {\n      return \"cost-4\";\n    } else {\n      return \"cost-5\";\n    }\n  }\n};\n","import React, { useState } from \"react\";\nimport {\n  Cell,\n  Column,\n  Table,\n  TableLoadingOption,\n  RenderMode,\n  RowHeaderCell\n} from \"@blueprintjs/table\";\nimport { PriceGridData, StayDates } from \"./types\";\nimport \"./PriceGrid.scss\";\nimport { formatDate, getPriceFromGrid, datesToKey } from \"./utils\";\nimport { HTMLTable } from \"@blueprintjs/core\";\nimport { CheckOutRow } from \"./CheckOutRow\";\nimport { DateRange } from \"@blueprintjs/datetime\";\n\ninterface Props {\n  grid?: PriceGridData;\n  useBlueprintTable: boolean;\n  onSelectSquare: (square: StayDates) => void;\n  dateRange: DateRange;\n}\n\nconst TINT_AFTER_CLICKED = false;\n\nexport const PriceGrid: React.FC<Props> = (props: Props) => {\n  const [selectedSquare, setSelectedSquare] = useState<StayDates | undefined>(\n    undefined\n  );\n  const [hoveredSquare, setHoveredSquare] = useState<StayDates | undefined>(\n    undefined\n  );\n\n  if (props.useBlueprintTable) {\n    return (\n      <Table\n        defaultColumnWidth={85}\n        enableRowResizing={false}\n        enableColumnResizing={false}\n        enableMultipleSelection={false}\n        loadingOptions={\n          !props.grid\n            ? [\n                TableLoadingOption.CELLS,\n                TableLoadingOption.COLUMN_HEADERS,\n                TableLoadingOption.ROW_HEADERS\n              ]\n            : []\n        }\n        renderMode={RenderMode.BATCH}\n        rowHeaderCellRenderer={renderRowHeader}\n        numRows={props.grid ? props.grid.checkInDates.length : 25}\n        defaultRowHeight={25}\n      >\n        {renderColumns()}\n      </Table>\n    );\n  } else {\n    if (!props.grid) {\n      return null;\n    }\n    return (\n      <div className=\"grid\">\n        <div>\n          <p className=\"checkin dates-label\">Check in</p>\n          <HTMLTable bordered condensed className=\"table-header\">\n            <thead>\n              <CheckOutRow checkInDates={props.grid.checkInDates} />\n            </thead>\n          </HTMLTable>\n          <div className=\"table-container\">\n            <HTMLTable bordered condensed className=\"html-table\">\n              <tbody>{props.grid.checkOutDates.map(renderRow)}</tbody>\n            </HTMLTable>\n          </div>\n        </div>\n        <p className=\"dates-label checkout-text\">Check out</p>\n      </div>\n    );\n  }\n\n  function renderRow(checkOut: string) {\n    if (!props.grid) {\n      return null;\n    }\n    return (\n      <CheckOutRow\n        key={checkOut}\n        checkOut={checkOut}\n        checkInDates={props.grid.checkInDates}\n        getPrice={getPrice(checkOut)}\n        onClick={onSelectSquare(checkOut)}\n        activeCheckIn={getActiveCheckIn(checkOut)}\n        getPricePercentile={getPricePercentile(checkOut)}\n        shouldTint={shouldTintSquare(checkOut)}\n        onHover={onHoverSquare(checkOut)}\n        offHover={onUnhoverSquare()}\n      />\n    );\n  }\n\n  function renderRowHeader(rowIndex: number) {\n    if (props.grid) {\n      return (\n        <RowHeaderCell className=\"row-header\">\n          {formatDate(props.grid.checkInDates[rowIndex]).date}\n        </RowHeaderCell>\n      );\n    }\n    return <RowHeaderCell>{rowIndex}</RowHeaderCell>;\n  }\n\n  function renderColumns() {\n    if (!props.grid) {\n      return <Column />;\n    }\n    return props.grid.checkOutDates.map(checkOut => {\n      return (\n        <Column\n          key={checkOut}\n          name={formatDate(checkOut).date}\n          cellRenderer={cellRenderer(checkOut)}\n        />\n      );\n    });\n  }\n\n  function cellRenderer(checkOut: string) {\n    return (rowIndex: number) => {\n      let priceStr = \"\";\n      if (props.grid) {\n        const checkIn = props.grid.checkInDates[rowIndex];\n        const price = getPriceFromGrid(props.grid, { checkIn, checkOut });\n        if (price !== undefined) {\n          priceStr = `$${price.toLocaleString()}`;\n        }\n      }\n      return <Cell>{priceStr}</Cell>;\n    };\n  }\n\n  function getPrice(checkOut: string) {\n    return (checkIn: string) => {\n      return getPriceFromGrid(props.grid, { checkIn, checkOut });\n    };\n  }\n\n  function onSelectSquare(checkOut: string) {\n    return (checkIn: string) => {\n      if (getPriceFromGrid(props.grid, { checkIn, checkOut }) === undefined) {\n        return;\n      }\n      setSelectedSquare({ checkIn, checkOut });\n      props.onSelectSquare && props.onSelectSquare({ checkIn, checkOut });\n    };\n  }\n\n  function onHoverSquare(checkOut: string) {\n    return (checkIn: string) => setHoveredSquare({ checkIn, checkOut });\n  }\n\n  function onUnhoverSquare() {\n    return () => setHoveredSquare(undefined);\n  }\n\n  function stayOverlaps(selected: StayDates, overlapper: StayDates) {\n    if (selected.checkIn === overlapper.checkIn) {\n      return selected.checkOut >= overlapper.checkOut;\n    }\n    if (selected.checkOut === overlapper.checkOut) {\n      return selected.checkIn <= overlapper.checkIn;\n    }\n    return false;\n  }\n\n  function shouldTintSquare(checkOut: string) {\n    return (checkIn: string): boolean => {\n      const overlapsSelected =\n        selectedSquare && stayOverlaps(selectedSquare, { checkIn, checkOut });\n      const overlapsHovered =\n        hoveredSquare && stayOverlaps(hoveredSquare, { checkIn, checkOut });\n\n      return overlapsHovered || (TINT_AFTER_CLICKED && overlapsSelected);\n    };\n  }\n\n  function getActiveCheckIn(checkOut: string) {\n    if (!TINT_AFTER_CLICKED) {\n      return;\n    }\n    if (!selectedSquare) {\n      return;\n    }\n    if (checkOut === selectedSquare.checkOut) {\n      return selectedSquare.checkIn;\n    }\n  }\n\n  function getPricePercentile(checkOut: string) {\n    return (checkIn: string): number | undefined => {\n      if (!props.grid) {\n        return;\n      }\n      const thisSquare = props.grid.map.get(datesToKey({ checkIn, checkOut }));\n      if (thisSquare !== undefined) {\n        return (thisSquare.rank - 1) / (props.grid.map.size - 1);\n      }\n    };\n  }\n};\n","import { List as ImmutableList } from \"immutable\";\nimport {\n  PriceGridData,\n  Hotel,\n  PricePoint,\n  PricePointWithPrice,\n  StayDates\n} from \"./types\";\n\nexport interface MatrixState {\n  pricePoints: {\n    byDates?: Map<string, PricePointWithPrice[]>;\n    byHotel: Map<string, PricePoint[]>;\n  };\n  grid?: PriceGridData;\n  hotels: ImmutableList<Hotel>;\n  selectedSquare?: StayDates;\n}\n\nexport interface LoadPricesAction {\n  type: \"LOAD_PRICES\";\n  grid: PriceGridData;\n  pricePointsByDates: Map<string, PricePointWithPrice[]>;\n}\n\nexport interface ToggleHotelSelection {\n  type: \"TOGGLE_HOTEL_SELECTION\";\n  hotel: Hotel;\n}\nexport interface SelectSquareAction {\n  type: \"SELECT_SQUARE\";\n  square: StayDates;\n}\n\nexport type Action =\n  | LoadPricesAction\n  | SelectSquareAction\n  | ToggleHotelSelection;\n\nexport function matrixReducer(state: MatrixState, action: Action): MatrixState {\n  switch (action.type) {\n    case \"LOAD_PRICES\":\n      return {\n        ...state,\n        grid: action.grid,\n        pricePoints: {\n          ...state.pricePoints,\n          byDates: action.pricePointsByDates\n        }\n      };\n    case \"SELECT_SQUARE\":\n      return {\n        ...state,\n        selectedSquare: action.square\n      };\n    case \"TOGGLE_HOTEL_SELECTION\":\n      return {\n        ...state,\n        hotels: state.hotels.map(hotel => ({\n          ...hotel,\n          selected:\n            hotel.name === action.hotel.name ? !hotel.selected : hotel.selected\n        }))\n      };\n  }\n}\n","import React, { useState } from \"react\";\nimport { NumberRange, RangeSlider, IRangeSliderProps } from \"@blueprintjs/core\";\nimport \"./Slider.scss\";\nimport classNames from \"classnames\";\n\ninterface Props extends IRangeSliderProps {\n  value: NumberRange;\n  labelPrefix?: string;\n  labelSuffix?: {\n    plural: string;\n    singular: string;\n  };\n}\n\nexport const Slider: React.FC<Props> = (props: Props) => {\n  const [localValue, setLocalValue] = useState<NumberRange>(props.value);\n  const {\n    className,\n    value,\n    labelPrefix,\n    labelSuffix,\n    ...spreadableProps\n  } = props;\n  return (\n    <div>\n      <RangeSlider\n        {...spreadableProps}\n        className={classNames(\"slider\", className)}\n        labelRenderer={label => (\n          <span className=\"no-wrap\">\n            {(labelPrefix || \"\") +\n              label.toLocaleString() +\n              (labelSuffix\n                ? label === 1\n                  ? labelSuffix.singular\n                  : labelSuffix.plural\n                : \"\")}\n          </span>\n        )}\n        value={localValue}\n        onChange={onChange}\n        onRelease={onRelease}\n      />\n    </div>\n  );\n\n  function onRelease(value: NumberRange) {\n    setLocalValue(value);\n    props.onRelease && props.onRelease(value);\n  }\n\n  function onChange(value: NumberRange) {\n    setLocalValue(value);\n    props.onChange && props.onChange(value);\n  }\n};\n","import React, { Fragment, useState } from \"react\";\nimport { Hotel, Bucket, ControlledBoundedRange, BoundedRange } from \"./types\";\nimport { Slider } from \"./Slider\";\nimport { Tooltip, Checkbox, Collapse, Icon, Intent } from \"@blueprintjs/core\";\nimport { DateRangeInput } from \"@blueprintjs/datetime\";\nimport {\n  stringToDate,\n  hotelIsWithinDistance,\n  getBound,\n  getLabelStepSizeForLabelCount\n} from \"./utils\";\nimport { Set as ImmutableSet } from \"immutable\";\nimport \"./Filters.scss\";\nimport { IconNames } from \"@blueprintjs/icons\";\n\ninterface Props {\n  bucketedHotels: Bucket<Hotel>[];\n  onChangeHotelSelection: (hotel: Hotel) => void;\n\n  distanceRange: ControlledBoundedRange<number>;\n  stayLengthRange: ControlledBoundedRange<number>;\n  dateRange: BoundedRange<Date | undefined>;\n  priceRange: ControlledBoundedRange<number>;\n}\n\nexport const Filters: React.FC<Props> = (props: Props) => {\n  const [expandedBuckets, setExpandedBuckets] = useState<ImmutableSet<number>>(\n    ImmutableSet([props.bucketedHotels[0].ceiling])\n  );\n\n  return (\n    <div className=\"filters\">\n      <h3>Filters</h3>\n      <p>Distance from Georgetown</p>\n      <Slider\n        min={getBound(props.distanceRange, \"min\")}\n        max={getBound(props.distanceRange, \"max\")}\n        value={props.distanceRange.selection}\n        onRelease={props.distanceRange.onChange}\n        labelStepSize={getLabelStepSizeForLabelCount(\n          props.distanceRange.bounds,\n          6\n        )}\n        labelSuffix={{ plural: \"mi\", singular: \"mi\" }}\n      />\n      <p>Stay Length</p>\n      <Slider\n        value={props.stayLengthRange.selection}\n        min={getBound(props.stayLengthRange, \"min\")}\n        max={getBound(props.stayLengthRange, \"max\")}\n        stepSize={1}\n        labelStepSize={getLabelStepSizeForLabelCount(\n          props.stayLengthRange.bounds,\n          3\n        )}\n        labelSuffix={{ plural: \" days\", singular: \" day\" }}\n        onRelease={props.stayLengthRange.onChange}\n      />\n      <p>Price Per Night</p>\n      <Slider\n        value={props.priceRange.selection}\n        min={getBound(props.priceRange, \"min\")}\n        max={getBound(props.priceRange, \"max\")}\n        labelStepSize={getLabelStepSizeForLabelCount(\n          props.priceRange.bounds,\n          3\n        )}\n        stepSize={10}\n        labelPrefix=\"$\"\n        onRelease={props.priceRange.onChange}\n      />\n      <div className=\"date-range-container\">\n        <DateRangeInput\n          className=\"date-range\"\n          shortcuts={false}\n          formatDate={date => date.toDateString()}\n          parseDate={stringToDate}\n          minDate={props.dateRange.bounds[0]}\n          maxDate={props.dateRange.bounds[1]}\n          onChange={props.dateRange.onChange}\n        />\n      </div>\n      <div className=\"hotels\">\n        {props.bucketedHotels.map(bucket => (\n          <Fragment key={`${bucket.ceiling}`}>\n            {renderTitle(bucket)}\n            <Collapse isOpen={expandedBuckets.has(getKeyFromBucket(bucket))}>\n              {bucket.items.map(hotel => {\n                const outOfRange = !hotelIsWithinDistance(\n                  hotel,\n                  props.distanceRange.selection\n                );\n                return (\n                  <div key={hotel.name}>\n                    <Tooltip\n                      content=\"Hotel is not in the selected distance range\"\n                      disabled={!outOfRange}\n                    >\n                      <Checkbox\n                        checked={hotel.selected && !outOfRange}\n                        disabled={outOfRange}\n                        onChange={() => props.onChangeHotelSelection(hotel)}\n                        key={hotel.name}\n                        labelElement={\n                          <span className=\"hotel-name\">\n                            {hotel.name}\n                            <span className=\"distance\">{hotel.distance}mi</span>\n                          </span>\n                        }\n                      />\n                    </Tooltip>\n                  </div>\n                );\n              })}\n            </Collapse>\n          </Fragment>\n        ))}\n      </div>\n    </div>\n  );\n\n  function renderTitle(bucket: Bucket<Hotel>) {\n    const expanded = expandedBuckets.has(getKeyFromBucket(bucket));\n    return (\n      <>\n        <h4 className=\"clickable\" onClick={toggleBucketExpansion(bucket)}>\n          <Icon\n            icon={expanded ? IconNames.CARET_DOWN : IconNames.CARET_RIGHT}\n          />\n          {renderBucketTitle(bucket)}\n          {bucket.items.some(hotel => hotel.selected) && (\n            <Icon\n              className=\"selected-icon\"\n              icon={IconNames.TICK}\n              intent={Intent.SUCCESS}\n            />\n          )}\n        </h4>\n      </>\n    );\n  }\n\n  function renderBucketTitle(bucket: Bucket<Hotel>) {\n    const suffix = \"miles\";\n    if (bucket.ceiling === Infinity) {\n      return `${bucket.floor}+ ${suffix}`;\n    }\n    return `${bucket.floor} – ${bucket.ceiling} ${suffix}`;\n  }\n\n  function toggleBucketExpansion(bucket: Bucket<Hotel>) {\n    const key = getKeyFromBucket(bucket);\n    return () => {\n      setExpandedBuckets(\n        expandedBuckets.has(key)\n          ? expandedBuckets.remove(key)\n          : expandedBuckets.add(key)\n      );\n    };\n  }\n\n  function getKeyFromBucket(bucket: Bucket<Hotel>) {\n    return bucket.ceiling;\n  }\n};\n","import { Classes } from \"@blueprintjs/core\";\nimport { List as ImmutableList } from \"immutable\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState\n} from \"react\";\nimport { AvailableRooms } from \"./AvailableRooms\";\nimport { PriceGrid } from \"./PriceGrid\";\nimport \"./MarriottMatrix.scss\";\nimport { matrixReducer, MatrixState } from \"./matrixReducer\";\nimport {\n  Bucket,\n  Hotel,\n  PriceGridMap,\n  PricePoint,\n  PricePointWithPrice,\n  StayDates\n} from \"./types\";\nimport {\n  datesToKey,\n  DEFAULT_HOTELS,\n  getLast,\n  hotelIsWithinDistance,\n  dateIsInRange,\n  PricePointMap,\n  pricePointIsWithinStayLengthRange,\n  getBucketCeiling,\n  pricePointIsWithinPriceRange,\n  useBounds\n} from \"./utils\";\nimport { Filters } from \"./Filters\";\nimport classNames from \"classnames\";\n\nfunction sortDates(dates: Set<string>): string[] {\n  return Array.from(dates).sort();\n}\n\ninterface Props {\n  pricePoints: PricePoint[];\n}\n\nfunction createInitialState(props: Props): MatrixState {\n  const hotelToPricePoints = new PricePointMap();\n  const selectedHotelNames = new Set<string>();\n  const hotels: Hotel[] = [];\n  props.pricePoints.forEach(pricePoint => {\n    const name = pricePoint.hotelName;\n\n    hotelToPricePoints.addPricePoint(name, pricePoint);\n\n    if (!selectedHotelNames.has(name)) {\n      selectedHotelNames.add(name);\n      hotels.push({\n        name: name,\n        distance: pricePoint.distance,\n        selected: DEFAULT_HOTELS.includes(name)\n      });\n    }\n  });\n\n  hotels.sort((a, b) => a.distance - b.distance);\n\n  return {\n    pricePoints: {\n      byHotel: hotelToPricePoints\n    },\n    hotels: ImmutableList(hotels)\n  };\n}\n\nexport const MarriottMatrix: React.FC<Props> = (props: Props) => {\n  const [viewingAvailableRooms, setViewingAvailableRooms] = useState(false);\n\n  const [state, dispatch] = useReducer(\n    matrixReducer,\n    createInitialState(props)\n  );\n\n  const [dateBounds, priceBounds, stayLengthBounds, distanceBounds] = useBounds(\n    props.pricePoints\n  );\n\n  const [bucketedHotels, nameToHotel, anyHotelsSelected] = useMemo(() => {\n    const hotels = state.hotels;\n    const buckets: Bucket<Hotel>[] = [];\n    const nameToHotel = new Map<string, Hotel>();\n    let anyHotelsSelected = false;\n\n    hotels.forEach(hotel => {\n      nameToHotel.set(hotel.name, hotel);\n      anyHotelsSelected =\n        anyHotelsSelected ||\n        (hotel.selected &&\n          hotelIsWithinDistance(hotel, distanceBounds.selection));\n      if (\n        buckets.length === 0 ||\n        hotel.distance > buckets[buckets.length - 1].ceiling\n      ) {\n        buckets.push({\n          floor: buckets.length === 0 ? 0 : buckets[buckets.length - 1].ceiling,\n          ceiling: getBucketCeiling(hotel.distance),\n          items: [hotel]\n        });\n      } else {\n        getLast(buckets).items.push(hotel);\n      }\n    });\n\n    return [buckets, nameToHotel, anyHotelsSelected];\n  }, [state.hotels, distanceBounds.selection]);\n\n  const onSelectSquare = useCallback(\n    (square: StayDates) => {\n      setViewingAvailableRooms(true);\n      dispatch({\n        type: \"SELECT_SQUARE\",\n        square\n      });\n    },\n    [setViewingAvailableRooms, dispatch]\n  );\n\n  useEffect(() => {\n    const datesToPricePoints = new PricePointMap<PricePointWithPrice>();\n    const priceGridMap = new Map<string, PricePointWithPrice>();\n    const checkInDates = new Set<string>();\n    const checkOutDates = new Set<string>();\n\n    function maybeAddPricePointToGrid(pricePoint: PricePoint) {\n      const {\n        hotelName,\n        pricePerNight,\n        soldOut,\n        stayDates: { checkIn, checkOut }\n      } = pricePoint;\n\n      for (const date of [checkIn, checkOut]) {\n        if (!dateIsInRange(date, dateBounds.selection)) {\n          return;\n        }\n      }\n\n      checkInDates.add(checkIn);\n      checkOutDates.add(checkOut);\n\n      if (pricePerNight === null || pricePerNight === undefined || soldOut) {\n        return;\n      }\n\n      const hotel = nameToHotel.get(hotelName);\n      if (\n        !hotel ||\n        (anyHotelsSelected && !hotel.selected) ||\n        !hotelIsWithinDistance(hotel, distanceBounds.selection) ||\n        !pricePointIsWithinStayLengthRange(\n          pricePoint.stayDates,\n          stayLengthBounds.selection\n        ) ||\n        !pricePointIsWithinPriceRange(pricePerNight, priceBounds.selection)\n      ) {\n        return;\n      }\n\n      const pricePointWithPrice = {\n        ...pricePoint,\n        pricePerNight\n      };\n      const datesString = datesToKey({ checkIn, checkOut });\n      const bestPriceForStay = priceGridMap.get(datesString);\n      if (!bestPriceForStay || pricePerNight < bestPriceForStay.pricePerNight) {\n        priceGridMap.set(datesString, pricePointWithPrice);\n      }\n      datesToPricePoints.addPricePoint(datesString, pricePointWithPrice);\n    }\n\n    if (anyHotelsSelected) {\n      for (const [\n        hotelName,\n        pricePoints\n      ] of state.pricePoints.byHotel.entries()) {\n        const hotelForPricePoint = nameToHotel.get(hotelName);\n        if (\n          hotelForPricePoint &&\n          hotelForPricePoint.selected &&\n          hotelIsWithinDistance(hotelForPricePoint, distanceBounds.selection)\n        ) {\n          pricePoints.forEach(pricePoint => {\n            if (\n              pricePointIsWithinStayLengthRange(\n                pricePoint.stayDates,\n                stayLengthBounds.selection\n              )\n            ) {\n              maybeAddPricePointToGrid(pricePoint);\n            }\n          });\n        }\n      }\n    } else {\n      props.pricePoints.forEach(maybeAddPricePointToGrid);\n    }\n\n    // add ranks\n    const sortedPrices = [...priceGridMap.entries()].sort(\n      ([_, a], [__, b]) => a.pricePerNight - b.pricePerNight\n    );\n    const mapWithRanks: PriceGridMap = new Map();\n    sortedPrices.forEach(([dateString, _], i) => {\n      const pricePoint = priceGridMap.get(dateString);\n      if (pricePoint) {\n        mapWithRanks.set(dateString, {\n          ...pricePoint,\n          rank: i + 1\n        });\n      }\n    });\n\n    dispatch({\n      type: \"LOAD_PRICES\",\n      pricePointsByDates: datesToPricePoints,\n      grid: {\n        map: mapWithRanks,\n        checkInDates: sortDates(checkInDates),\n        checkOutDates: sortDates(checkOutDates)\n      }\n    });\n  }, [\n    props.pricePoints,\n    state.hotels,\n    dateBounds.selection,\n    distanceBounds.selection,\n    stayLengthBounds.selection,\n    priceBounds.selection,\n    anyHotelsSelected,\n    nameToHotel,\n    state.pricePoints.byHotel\n  ]);\n\n  return (\n    <div className={classNames(\"container\", Classes.DARK)}>\n      <div className=\"sidebar\">{renderFilters()}</div>\n      <div className=\"content\">\n        <h2>Marriott Matrix</h2>\n        {renderTable()}\n        {state.selectedSquare && (\n          <AvailableRooms\n            selectedSquare={state.selectedSquare}\n            pricePoints={getPricePointsForStay(state.selectedSquare)}\n            visible={viewingAvailableRooms}\n            onClose={() => setViewingAvailableRooms(false)}\n          />\n        )}\n      </div>\n    </div>\n  );\n\n  function renderTable() {\n    if (!state.grid) {\n      return null;\n    }\n    return (\n      <PriceGrid\n        grid={state.grid}\n        dateRange={dateBounds.selection}\n        useBlueprintTable={false}\n        onSelectSquare={onSelectSquare}\n      />\n    );\n  }\n\n  function renderFilters() {\n    if (!state.grid) {\n      return null;\n    }\n    return (\n      <Filters\n        dateRange={{\n          bounds: dateBounds.bounds,\n          onChange: dateBounds.onChange\n        }}\n        distanceRange={distanceBounds}\n        stayLengthRange={stayLengthBounds}\n        priceRange={priceBounds}\n        bucketedHotels={bucketedHotels}\n        onChangeHotelSelection={hotel => {\n          dispatch({\n            type: \"TOGGLE_HOTEL_SELECTION\",\n            hotel\n          });\n        }}\n      />\n    );\n  }\n\n  function getPricePointsForStay(\n    stay?: StayDates\n  ): PricePointWithPrice[] | undefined {\n    if (!state.grid || !stay || !state.pricePoints.byDates) {\n      return [];\n    }\n    return state.pricePoints.byDates.get(datesToKey(stay));\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { MarriottMatrix } from \"./MarriottMatrix\";\nimport prices from \"./prices.json\";\nimport { ScrapedPricePoint, PricePoint } from \"./types\";\nimport { generateBookingLink } from \"./utils\";\n\nfunction useWindowWidth() {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n\n  return width;\n}\n\nfunction processScrapedPricePoint(pricePoint: ScrapedPricePoint): PricePoint {\n  const {\n    corporate_rate,\n    name,\n    price_per_night,\n    sold_out,\n    distance,\n    dates: [checkIn, checkOut]\n  } = pricePoint;\n\n  // TODO: url generation should be on backend\n  let bookingLink: string | undefined = undefined;\n  if (pricePoint.booking_link) {\n    const propertyCodeMatch = pricePoint.booking_link.match(\n      /propertyCode=([A-Z]+)&/\n    );\n    if (propertyCodeMatch === null) {\n      throw Error(\n        \"No property code match in booking link: \" + pricePoint.booking_link\n      );\n    }\n    const propertyCode = propertyCodeMatch[1];\n    bookingLink = generateBookingLink(\n      checkIn,\n      checkOut,\n      corporate_rate,\n      propertyCode\n    );\n  }\n\n  return {\n    hotelName: name,\n    stayDates: { checkIn, checkOut },\n    corporateRate: corporate_rate,\n    pricePerNight: price_per_night,\n    soldOut: sold_out,\n    distance: distance,\n    bookingLink\n  };\n}\n\nconst App: React.FC = () => {\n  const width = useWindowWidth();\n  if (width < 750) {\n    return <p className=\"too-small\">Desktop only :-)</p>;\n  }\n  return <MarriottMatrix pricePoints={prices.map(processScrapedPricePoint)} />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}